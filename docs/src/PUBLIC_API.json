{
  "version": "0.21.0",
  "components": {
    "Accordion": {
      "moduleName": "Accordion",
      "props": [
        [
          "align",
          {
            "kind": "let",
            "value": "\"end\"",
            "type": "\"start\" | \"end\"",
            "description": "Specify alignment of accordion item chevron icon"
          }
        ],
        [
          "size",
          {
            "kind": "let",
            "type": "\"sm\" | \"xl\"",
            "description": "Specify the size of the accordion"
          }
        ],
        [
          "disabled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable the accordion"
          }
        ],
        [
          "skeleton",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to display the skeleton state"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 1139,
            "end": 1147,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 1152,
            "end": 1164,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 1169,
            "end": 1182,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 1187,
            "end": 1200,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "AccordionItem": {
      "moduleName": "AccordionItem",
      "props": [
        [
          "title",
          {
            "kind": "let",
            "value": "\"title\"",
            "type": "string",
            "description": "Specify the title of the accordion item heading\nAlternatively, use the named slot \"title\" (e.g. <div slot=\"title\">...</div>)"
          }
        ],
        [
          "open",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to open the first accordion item"
          }
        ],
        [
          "disabled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable the accordion item"
          }
        ],
        [
          "iconDescription",
          {
            "kind": "let",
            "value": "\"Expand/Collapse\"",
            "type": "string",
            "description": "Specify the ARIA label for the accordion item chevron icon"
          }
        ]
      ],
      "slots": [
        [
          "title",
          {
            "attributes": [
              {
                "start": 2004,
                "end": 2016,
                "type": "Attribute",
                "name": "name",
                "value": [
                  {
                    "start": 2010,
                    "end": 2015,
                    "type": "Text",
                    "raw": "title",
                    "data": "title"
                  }
                ]
              }
            ],
            "children": [
              {
                "start": 2017,
                "end": 2024,
                "type": "MustacheTag",
                "expression": {
                  "type": "Identifier",
                  "start": 2018,
                  "end": 2023,
                  "loc": {
                    "start": {
                      "line": 84,
                      "column": 26
                    },
                    "end": {
                      "line": 84,
                      "column": 31
                    }
                  },
                  "name": "title"
                }
              }
            ],
            "default": false,
            "default_value": "{title}\n"
          }
        ],
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "animationend",
          {
            "start": 1325,
            "end": 1340,
            "type": "EventHandler",
            "name": "animationend",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "click",
          {
            "start": 1561,
            "end": 1569,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 1678,
            "end": 1690,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 1695,
            "end": 1708,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 1713,
            "end": 1726,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "keydown",
          {
            "start": 1731,
            "end": 1741,
            "type": "EventHandler",
            "name": "keydown",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "AccordionSkeleton": {
      "moduleName": "AccordionSkeleton",
      "props": [
        [
          "count",
          {
            "kind": "let",
            "value": "4",
            "type": "number",
            "description": "Specify the number of accordion items to render"
          }
        ],
        [
          "align",
          {
            "kind": "let",
            "value": "\"end\"",
            "type": "\"start\" | \"end\"",
            "description": "Specify alignment of accordion item chevron icon"
          }
        ],
        [
          "size",
          {
            "kind": "let",
            "type": "\"sm\" | \"xl\"",
            "description": "Specify the size of the accordion"
          }
        ],
        [
          "open",
          {
            "kind": "let",
            "value": "true",
            "type": "boolean",
            "description": "Set to `false` to close the first accordion item"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 822,
            "end": 830,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 833,
            "end": 845,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 848,
            "end": 861,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 864,
            "end": 877,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "AspectRatio": {
      "moduleName": "AspectRatio",
      "props": [
        [
          "ratio",
          {
            "kind": "let",
            "value": "\"2x1\"",
            "type": "\"2x1\" | \"16x9\" | \"4x3\" | \"1x1\" | \"3x4\" | \"9x16\" | \"1x2\"",
            "description": "Specify the aspect ratio"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [],
      "dispatched_events": []
    },
    "Breadcrumb": {
      "moduleName": "Breadcrumb",
      "props": [
        [
          "noTrailingSlash",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to hide the breadcrumb trailing slash"
          }
        ],
        [
          "skeleton",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to display skeleton state"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 602,
            "end": 610,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 615,
            "end": 627,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 632,
            "end": 645,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 650,
            "end": 663,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "BreadcrumbItem": {
      "moduleName": "BreadcrumbItem",
      "props": [
        [
          "href",
          {
            "kind": "let",
            "type": "string",
            "description": "Set the `href` to use an anchor link"
          }
        ],
        [
          "isCurrentPage",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` if the breadcrumb item represents the current page"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [
              {
                "start": 682,
                "end": 758,
                "type": "Attribute",
                "name": "props",
                "value": [
                  {
                    "start": 689,
                    "end": 757,
                    "type": "MustacheTag",
                    "expression": {
                      "type": "ObjectExpression",
                      "start": 690,
                      "end": 756,
                      "loc": {
                        "start": {
                          "line": 32,
                          "column": 14
                        },
                        "end": {
                          "line": 32,
                          "column": 80
                        }
                      },
                      "properties": [
                        {
                          "type": "Property",
                          "start": 692,
                          "end": 735,
                          "loc": {
                            "start": {
                              "line": 32,
                              "column": 16
                            },
                            "end": {
                              "line": 32,
                              "column": 59
                            }
                          },
                          "method": false,
                          "shorthand": false,
                          "computed": false,
                          "key": {
                            "type": "Literal",
                            "start": 692,
                            "end": 706,
                            "loc": {
                              "start": {
                                "line": 32,
                                "column": 16
                              },
                              "end": {
                                "line": 32,
                                "column": 30
                              }
                            },
                            "value": "aria-current",
                            "raw": "'aria-current'"
                          },
                          "value": {
                            "type": "MemberExpression",
                            "start": 708,
                            "end": 735,
                            "loc": {
                              "start": {
                                "line": 32,
                                "column": 32
                              },
                              "end": {
                                "line": 32,
                                "column": 59
                              }
                            },
                            "object": {
                              "type": "Identifier",
                              "start": 708,
                              "end": 719,
                              "loc": {
                                "start": {
                                  "line": 32,
                                  "column": 32
                                },
                                "end": {
                                  "line": 32,
                                  "column": 43
                                }
                              },
                              "name": "$$restProps"
                            },
                            "property": {
                              "type": "Literal",
                              "start": 720,
                              "end": 734,
                              "loc": {
                                "start": {
                                  "line": 32,
                                  "column": 44
                                },
                                "end": {
                                  "line": 32,
                                  "column": 58
                                }
                              },
                              "value": "aria-current",
                              "raw": "'aria-current'"
                            },
                            "computed": true,
                            "optional": false
                          },
                          "kind": "init"
                        },
                        {
                          "type": "Property",
                          "start": 737,
                          "end": 754,
                          "loc": {
                            "start": {
                              "line": 32,
                              "column": 61
                            },
                            "end": {
                              "line": 32,
                              "column": 78
                            }
                          },
                          "method": false,
                          "shorthand": false,
                          "computed": false,
                          "key": {
                            "type": "Identifier",
                            "start": 737,
                            "end": 742,
                            "loc": {
                              "start": {
                                "line": 32,
                                "column": 61
                              },
                              "end": {
                                "line": 32,
                                "column": 66
                              }
                            },
                            "name": "class"
                          },
                          "value": {
                            "type": "Literal",
                            "start": 744,
                            "end": 754,
                            "loc": {
                              "start": {
                                "line": 32,
                                "column": 68
                              },
                              "end": {
                                "line": 32,
                                "column": 78
                              }
                            },
                            "value": "bx--link",
                            "raw": "'bx--link'"
                          },
                          "kind": "init"
                        }
                      ]
                    }
                  }
                ]
              }
            ],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 488,
            "end": 496,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 499,
            "end": 511,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 514,
            "end": 527,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 530,
            "end": 543,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "BreadcrumbSkeleton": {
      "moduleName": "BreadcrumbSkeleton",
      "props": [
        [
          "noTrailingSlash",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to hide the breadcrumb trailing slash"
          }
        ],
        [
          "count",
          {
            "kind": "let",
            "value": "3",
            "type": "number",
            "description": "Specify the number of breadcrumb items to render"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 443,
            "end": 451,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 454,
            "end": 466,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 469,
            "end": 482,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 485,
            "end": 498,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "Button": {
      "moduleName": "Button",
      "props": [
        [
          "kind",
          {
            "kind": "let",
            "value": "\"primary\"",
            "type": "\"primary\" | \"secondary\" | \"tertiary\" | \"ghost\" | \"danger\"",
            "description": "Specify the kind of button"
          }
        ],
        [
          "size",
          {
            "kind": "let",
            "value": "\"default\"",
            "type": "\"default\" | \"field\" | \"small\"",
            "description": "Specify the size of button"
          }
        ],
        [
          "hasIconOnly",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` for the icon-only variant"
          }
        ],
        [
          "icon",
          {
            "kind": "let",
            "type": "typeof import(\"carbon-icons-svelte/lib/Add16\").default",
            "description": "Specify the icon from `carbon-icons-svelte` to render"
          }
        ],
        [
          "iconDescription",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify the ARIA label for the button icon"
          }
        ],
        [
          "tooltipAlignment",
          {
            "kind": "let",
            "type": "\"start\" | \"center\" | \"end\"",
            "description": "Set the alignment of the tooltip relative to the icon\n`hasIconOnly` must be set to `true`"
          }
        ],
        [
          "tooltipPosition",
          {
            "kind": "let",
            "type": "\"top\" | \"right\" | \"bottom\" | \"left\"",
            "description": "Set the position of the tooltip relative to the icon"
          }
        ],
        [
          "as",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to render a custom HTML element\nProps are destructured as `props` in the default slot (e.g. <Button let:props><div {...props}>...</div></Button>)"
          }
        ],
        [
          "skeleton",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to display the skeleton state"
          }
        ],
        [
          "disabled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable the button"
          }
        ],
        [
          "href",
          {
            "kind": "let",
            "type": "string",
            "description": "Set the `href` to use an anchor link"
          }
        ],
        [
          "tabindex",
          {
            "kind": "let",
            "value": "\"0\"",
            "type": "string",
            "description": "Specify the tabindex"
          }
        ],
        [
          "type",
          {
            "kind": "let",
            "value": "\"button\"",
            "type": "string",
            "description": "Specify the `type` attribute for the button element"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLAnchorElement | HTMLButtonElement",
            "description": "Obtain a reference to the HTML element"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 3947,
            "end": 3955,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 3962,
            "end": 3974,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 3981,
            "end": 3994,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 4001,
            "end": 4014,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "ButtonSet": {
      "moduleName": "ButtonSet",
      "props": [
        [
          "stacked",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to stack the buttons vertically"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [],
      "dispatched_events": []
    },
    "ButtonSkeleton": {
      "moduleName": "ButtonSkeleton",
      "props": [
        [
          "href",
          {
            "kind": "let",
            "type": "string",
            "description": "Set the `href` to use an anchor link"
          }
        ],
        [
          "size",
          {
            "kind": "let",
            "value": "\"default\"",
            "type": "\"default\" | \"field\" | \"small\"",
            "description": "Specify the size of button skeleton"
          }
        ],
        [
          "small",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to use the small variant"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 990,
            "end": 998,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 1003,
            "end": 1015,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 1020,
            "end": 1033,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 1038,
            "end": 1051,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "Checkbox": {
      "moduleName": "Checkbox",
      "props": [
        [
          "checked",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Specify whether the checkbox is checked"
          }
        ],
        [
          "indeterminate",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Specify whether the checkbox is indeterminate"
          }
        ],
        [
          "skeleton",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to display the skeleton state"
          }
        ],
        [
          "readonly",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` for the checkbox to be read-only"
          }
        ],
        [
          "disabled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable the checkbox"
          }
        ],
        [
          "labelText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the label text"
          }
        ],
        [
          "hideLabel",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to visually hide the label text"
          }
        ],
        [
          "name",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Set a name for the input element"
          }
        ],
        [
          "title",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify the title attribute for the label element"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the input label"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLInputElement",
            "description": "Obtain a reference to the input HTML element"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 1845,
            "end": 1853,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 1858,
            "end": 1870,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 1875,
            "end": 1888,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 1893,
            "end": 1906,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "change",
          {
            "start": 2164,
            "end": 2173,
            "type": "EventHandler",
            "name": "change",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": [
        [
          "check",
          {
            "detail": "checked"
          }
        ]
      ]
    },
    "CheckboxSkeleton": {
      "moduleName": "CheckboxSkeleton",
      "props": [],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 131,
            "end": 139,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 142,
            "end": 154,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 157,
            "end": 170,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 173,
            "end": 186,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "ClickableTile": {
      "moduleName": "ClickableTile",
      "props": [
        [
          "clicked",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to click the tile"
          }
        ],
        [
          "light",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to enable the light variant"
          }
        ],
        [
          "href",
          {
            "kind": "let",
            "type": "string",
            "description": "Set the `href`"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 652,
            "end": 660,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "keydown",
          {
            "start": 714,
            "end": 724,
            "type": "EventHandler",
            "name": "keydown",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 837,
            "end": 849,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 852,
            "end": 865,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 868,
            "end": 881,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "CodeSnippet": {
      "moduleName": "CodeSnippet",
      "props": [
        [
          "type",
          {
            "kind": "let",
            "value": "\"single\"",
            "type": "\"single\" | \"inline\" | \"multi\"",
            "description": "Set the type of code snippet"
          }
        ],
        [
          "code",
          {
            "kind": "let",
            "type": "string",
            "description": "Set the code snippet text\nAlternatively, use the default slot (e.g. <CodeSnippet>{`code`}</CodeSnippet>)"
          }
        ],
        [
          "expanded",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to expand a multi-line code snippet (type=\"multi\")"
          }
        ],
        [
          "hideCopyButton",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to hide the copy button"
          }
        ],
        [
          "wrapText",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to wrap the text\nNote that `type` must be \"multi\""
          }
        ],
        [
          "light",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to enable the light variant"
          }
        ],
        [
          "skeleton",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to display the skeleton state"
          }
        ],
        [
          "copyButtonDescription",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify the ARIA label for the copy button icon"
          }
        ],
        [
          "copyLabel",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify the ARIA label of the copy button"
          }
        ],
        [
          "feedback",
          {
            "kind": "let",
            "value": "\"Copied!\"",
            "type": "string",
            "description": "Specify the feedback text displayed when clicking the snippet"
          }
        ],
        [
          "feedbackTimeout",
          {
            "kind": "let",
            "value": "2000",
            "type": "number",
            "description": "Set the timeout duration (ms) to display feedback text"
          }
        ],
        [
          "showLessText",
          {
            "kind": "let",
            "value": "\"Show less\"",
            "type": "string",
            "description": "Specify the show less text\n`type` must be \"multi\""
          }
        ],
        [
          "showMoreText",
          {
            "kind": "let",
            "value": "\"Show more\"",
            "type": "string",
            "description": "Specify the show more text\n`type` must be \"multi\""
          }
        ],
        [
          "showMoreLess",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to enable the show more/less button"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the code element"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLPreElement",
            "description": "Obtain a reference to the pre HTML element"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [
              {
                "start": 4853,
                "end": 4859,
                "type": "MustacheTag",
                "expression": {
                  "type": "Identifier",
                  "start": 4854,
                  "end": 4858,
                  "loc": {
                    "start": {
                      "line": 184,
                      "column": 19
                    },
                    "end": {
                      "line": 184,
                      "column": 23
                    }
                  },
                  "name": "code"
                }
              }
            ],
            "default": true,
            "default_value": "{code}\n"
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 5101,
            "end": 5109,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 4467,
            "end": 4479,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 4486,
            "end": 4499,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 4506,
            "end": 4519,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "animationend",
          {
            "start": 5120,
            "end": 5135,
            "type": "EventHandler",
            "name": "animationend",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "CodeSnippetSkeleton": {
      "moduleName": "CodeSnippetSkeleton",
      "props": [
        [
          "type",
          {
            "kind": "let",
            "value": "\"single\"",
            "type": "\"single\" | \"inline\" | \"multi\"",
            "description": "Set the type of code snippet"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 338,
            "end": 346,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 349,
            "end": 361,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 364,
            "end": 377,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 380,
            "end": 393,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "Column": {
      "moduleName": "Column",
      "props": [
        [
          "as",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to render a custom HTML element\nProps are destructured as `props` in the default slot (e.g. <Column let:props><article {...props}>...</article></Column>)"
          }
        ],
        [
          "noGutter",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to remove the gutter"
          }
        ],
        [
          "noGutterLeft",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to remove the left gutter"
          }
        ],
        [
          "noGutterRight",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to remove the right gutter"
          }
        ],
        [
          "aspectRatio",
          {
            "kind": "let",
            "type": "\"2x1\" | \"16x9\" | \"9x16\" | \"1x2\" | \"4x3\" | \"3x4\" | \"1x1\"",
            "description": "Specify the aspect ratio of the column"
          }
        ],
        [
          "sm",
          {
            "kind": "let",
            "type": "ColumnBreakpoint",
            "description": "Set the small breakpoint"
          }
        ],
        [
          "md",
          {
            "kind": "let",
            "type": "ColumnBreakpoint",
            "description": "Set the medium breakpoint"
          }
        ],
        [
          "lg",
          {
            "kind": "let",
            "type": "ColumnBreakpoint",
            "description": "Set the large breakpoint"
          }
        ],
        [
          "xlg",
          {
            "kind": "let",
            "type": "ColumnBreakpoint",
            "description": "Set the extra large breakpoint"
          }
        ],
        [
          "max",
          {
            "kind": "let",
            "type": "ColumnBreakpoint",
            "description": "Set the maximum breakpoint"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [],
      "dispatched_events": []
    },
    "ComboBox": {
      "moduleName": "ComboBox",
      "props": [
        [
          "items",
          {
            "kind": "let",
            "value": "[]",
            "type": "ComboBoxItem[]",
            "description": "Set the combobox items"
          }
        ],
        [
          "itemToString",
          {
            "kind": "let",
            "type": "(item: ComboBoxItem) => string",
            "description": "Override the display of a combobox item"
          }
        ],
        [
          "selectedIndex",
          {
            "kind": "let",
            "type": "number",
            "description": "Set the selected item by value index"
          }
        ],
        [
          "value",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the selected combobox value"
          }
        ],
        [
          "size",
          {
            "kind": "let",
            "type": "\"sm\" | \"xl\"",
            "description": "Set the size of the combobox"
          }
        ],
        [
          "disabled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable the combobox"
          }
        ],
        [
          "titleText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the title text of the combobox"
          }
        ],
        [
          "placeholder",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the placeholder text"
          }
        ],
        [
          "helperText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the helper text"
          }
        ],
        [
          "invalidText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the invalid state text"
          }
        ],
        [
          "invalid",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to indicate an invalid state"
          }
        ],
        [
          "light",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to enable the light variant"
          }
        ],
        [
          "open",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to open the combobox menu dropdown"
          }
        ],
        [
          "shouldFilterItem",
          {
            "kind": "let",
            "type": "(item: ComboBoxItem, value: string) => boolean",
            "description": "Determine if an item should be filtered given the current combobox value"
          }
        ],
        [
          "translateWithId",
          {
            "kind": "let",
            "type": "(id: any) => string",
            "description": "Override the default translation ids"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the list box component"
          }
        ],
        [
          "name",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify a name attribute for the input"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLInputElement",
            "description": "Obtain a reference to the input HTML element"
          }
        ],
        [
          "listRef",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLDivElement",
            "description": "Obtain a reference to the list HTML element"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "keydown",
          {
            "start": 5618,
            "end": 5628,
            "type": "EventHandler",
            "name": "keydown",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "focus",
          {
            "start": 6205,
            "end": 6213,
            "type": "EventHandler",
            "name": "focus",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "blur",
          {
            "start": 6222,
            "end": 6229,
            "type": "EventHandler",
            "name": "blur",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "clear",
          {
            "start": 6680,
            "end": 6688,
            "type": "EventHandler",
            "name": "clear",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "scroll",
          {
            "start": 7246,
            "end": 7255,
            "type": "EventHandler",
            "name": "scroll",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": [
        [
          "select",
          {
            "detail": "{ selectedId, selectedIndex, selectedItem }"
          }
        ]
      ]
    },
    "ComposedModal": {
      "moduleName": "ComposedModal",
      "props": [
        [
          "size",
          {
            "kind": "let",
            "type": "\"xs\" | \"sm\" | \"lg\"",
            "description": "Set the size of the composed modal"
          }
        ],
        [
          "open",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to open the modal"
          }
        ],
        [
          "danger",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to use the danger variant"
          }
        ],
        [
          "preventCloseOnClickOutside",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to prevent the modal from closing when clicking outside"
          }
        ],
        [
          "containerClass",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify a class for the inner modal"
          }
        ],
        [
          "selectorPrimaryFocus",
          {
            "kind": "let",
            "value": "\"[data-modal-primary-focus]\"",
            "type": "string",
            "description": "Specify a selector to be focused when opening the modal"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLElement",
            "description": "Obtain a reference to the top-level HTML element"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 2373,
            "end": 2381,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 2517,
            "end": 2529,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 2532,
            "end": 2545,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 2548,
            "end": 2561,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "transitionend",
          {
            "start": 2564,
            "end": 2580,
            "type": "EventHandler",
            "name": "transitionend",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": [
        ["submit", {}],
        ["close", {}],
        ["open", {}]
      ]
    },
    "Content": {
      "moduleName": "Content",
      "props": [
        [
          "id",
          {
            "kind": "let",
            "value": "\"main-content\"",
            "type": "string",
            "description": "Specify the id for the main element"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [],
      "dispatched_events": []
    },
    "ContentSwitcher": {
      "moduleName": "ContentSwitcher",
      "props": [
        [
          "selectedIndex",
          {
            "kind": "let",
            "value": "0",
            "type": "number",
            "description": "Set the selected index of the switch item"
          }
        ],
        [
          "light",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to enable the light variant"
          }
        ],
        [
          "size",
          {
            "kind": "let",
            "type": "\"sm\" | \"xl\"",
            "description": "Specify the size of the content switcher"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 1640,
            "end": 1648,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 1651,
            "end": 1663,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 1666,
            "end": 1679,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 1682,
            "end": 1695,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": [
        [
          "change",
          {
            "detail": "currentIndex"
          }
        ]
      ]
    },
    "Copy": {
      "moduleName": "Copy",
      "props": [
        [
          "feedback",
          {
            "kind": "let",
            "value": "\"Copied!\"",
            "type": "string",
            "description": "Set the feedback text shown after clicking the button"
          }
        ],
        [
          "feedbackTimeout",
          {
            "kind": "let",
            "value": "2000",
            "type": "number",
            "description": "Set the timeout duration (ms) to display feedback text"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLButtonElement",
            "description": "Obtain a reference to the button HTML element"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [
              {
                "start": 1265,
                "end": 1270,
                "type": "Text",
                "raw": "\n    ",
                "data": "\n    "
              },
              {
                "start": 1270,
                "end": 1329,
                "type": "IfBlock",
                "expression": {
                  "type": "Identifier",
                  "start": 1275,
                  "end": 1284,
                  "loc": {
                    "start": {
                      "line": 57,
                      "column": 9
                    },
                    "end": {
                      "line": 57,
                      "column": 18
                    }
                  },
                  "name": "animation"
                },
                "children": [
                  {
                    "start": 1285,
                    "end": 1324,
                    "type": "MustacheTag",
                    "expression": {
                      "type": "LogicalExpression",
                      "start": 1286,
                      "end": 1323,
                      "loc": {
                        "start": {
                          "line": 57,
                          "column": 20
                        },
                        "end": {
                          "line": 57,
                          "column": 57
                        }
                      },
                      "left": {
                        "type": "Identifier",
                        "start": 1286,
                        "end": 1294,
                        "loc": {
                          "start": {
                            "line": 57,
                            "column": 20
                          },
                          "end": {
                            "line": 57,
                            "column": 28
                          }
                        },
                        "name": "feedback"
                      },
                      "operator": "||",
                      "right": {
                        "type": "MemberExpression",
                        "start": 1298,
                        "end": 1323,
                        "loc": {
                          "start": {
                            "line": 57,
                            "column": 32
                          },
                          "end": {
                            "line": 57,
                            "column": 57
                          }
                        },
                        "object": {
                          "type": "Identifier",
                          "start": 1298,
                          "end": 1309,
                          "loc": {
                            "start": {
                              "line": 57,
                              "column": 32
                            },
                            "end": {
                              "line": 57,
                              "column": 43
                            }
                          },
                          "name": "$$restProps"
                        },
                        "property": {
                          "type": "Literal",
                          "start": 1310,
                          "end": 1322,
                          "loc": {
                            "start": {
                              "line": 57,
                              "column": 44
                            },
                            "end": {
                              "line": 57,
                              "column": 56
                            }
                          },
                          "value": "aria-label",
                          "raw": "'aria-label'"
                        },
                        "computed": true,
                        "optional": false
                      }
                    }
                  }
                ]
              },
              {
                "start": 1329,
                "end": 1332,
                "type": "Text",
                "raw": "\n  ",
                "data": "\n  "
              }
            ],
            "default": true,
            "default_value": "\n    \n{#if animation}{feedback || $$restProps['aria-label']}{/if}\n\n  \n"
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 914,
            "end": 922,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "animationend",
          {
            "start": 1108,
            "end": 1123,
            "type": "EventHandler",
            "name": "animationend",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "CopyButton": {
      "moduleName": "CopyButton",
      "props": [
        [
          "iconDescription",
          {
            "kind": "let",
            "value": "\"Copy to clipboard\"",
            "type": "string",
            "description": "Set the title and ARIA label for the copy button"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 397,
            "end": 405,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "animationend",
          {
            "start": 408,
            "end": 423,
            "type": "EventHandler",
            "name": "animationend",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "DataTable": {
      "moduleName": "DataTable",
      "props": [
        [
          "headers",
          {
            "kind": "let",
            "value": "[]",
            "type": "{ key: string; value: string; display?: (item) => string; sort?: (a, b) => number; empty?: boolean; columnMenu?: boolean; }[]",
            "description": "Specify the data table headers"
          }
        ],
        [
          "rows",
          {
            "kind": "let",
            "value": "[]",
            "type": "Object[]",
            "description": "Specify the rows the data table should render\nkeys defined in `headers` are used for the row ids"
          }
        ],
        [
          "size",
          {
            "kind": "let",
            "type": "\"compact\" | \"short\" | \"tall\"",
            "description": "Set the size of the data table"
          }
        ],
        [
          "title",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the title of the data table"
          }
        ],
        [
          "description",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the description of the data table"
          }
        ],
        [
          "zebra",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to use zebra styles"
          }
        ],
        [
          "sortable",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` for the sortable variant"
          }
        ],
        [
          "expandable",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` for the expandable variant\nAutomatically set to `true` if `batchExpansion` is `true`"
          }
        ],
        [
          "batchExpansion",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to enable batch expansion"
          }
        ],
        [
          "expandedRowIds",
          {
            "kind": "let",
            "value": "[]",
            "type": "string[]",
            "description": "Specify the row ids to be expanded"
          }
        ],
        [
          "radio",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` for the radio selection variant"
          }
        ],
        [
          "selectable",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` for the selectable variant\nAutomatically set to `true` if `radio` or `batchSelection` are `true`"
          }
        ],
        [
          "batchSelection",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to enable batch selection"
          }
        ],
        [
          "selectedRowIds",
          {
            "kind": "let",
            "value": "[]",
            "type": "string[]",
            "description": "Specify the row ids to be selected"
          }
        ],
        [
          "stickyHeader",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to enable a sticky header"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ],
        [
          "cell-header",
          {
            "attributes": [
              {
                "start": 7729,
                "end": 7747,
                "type": "Attribute",
                "name": "name",
                "value": [
                  {
                    "start": 7735,
                    "end": 7746,
                    "type": "Text",
                    "raw": "cell-header",
                    "data": "cell-header"
                  }
                ]
              },
              {
                "start": 7748,
                "end": 7765,
                "type": "Attribute",
                "name": "header",
                "value": [
                  {
                    "start": 7756,
                    "end": 7764,
                    "type": "MustacheTag",
                    "expression": {
                      "type": "Identifier",
                      "start": 7757,
                      "end": 7763,
                      "loc": {
                        "start": {
                          "line": 268,
                          "column": 48
                        },
                        "end": {
                          "line": 268,
                          "column": 54
                        }
                      },
                      "name": "header"
                    }
                  }
                ]
              }
            ],
            "children": [
              {
                "start": 7766,
                "end": 7780,
                "type": "MustacheTag",
                "expression": {
                  "type": "MemberExpression",
                  "start": 7767,
                  "end": 7779,
                  "loc": {
                    "start": {
                      "line": 268,
                      "column": 58
                    },
                    "end": {
                      "line": 268,
                      "column": 70
                    }
                  },
                  "object": {
                    "type": "Identifier",
                    "start": 7767,
                    "end": 7773,
                    "loc": {
                      "start": {
                        "line": 268,
                        "column": 58
                      },
                      "end": {
                        "line": 268,
                        "column": 64
                      }
                    },
                    "name": "header"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 7774,
                    "end": 7779,
                    "loc": {
                      "start": {
                        "line": 268,
                        "column": 65
                      },
                      "end": {
                        "line": 268,
                        "column": 70
                      }
                    },
                    "name": "value"
                  },
                  "computed": false,
                  "optional": false
                }
              }
            ],
            "default": false,
            "default_value": "{header.value}\n"
          }
        ],
        [
          "cell",
          {
            "attributes": [
              {
                "start": 11126,
                "end": 11137,
                "type": "Attribute",
                "name": "name",
                "value": [
                  {
                    "start": 11132,
                    "end": 11136,
                    "type": "Text",
                    "raw": "cell",
                    "data": "cell"
                  }
                ]
              },
              {
                "start": 11138,
                "end": 11149,
                "type": "Attribute",
                "name": "row",
                "value": [
                  {
                    "start": 11143,
                    "end": 11148,
                    "type": "MustacheTag",
                    "expression": {
                      "type": "Identifier",
                      "start": 11144,
                      "end": 11147,
                      "loc": {
                        "start": {
                          "line": 357,
                          "column": 40
                        },
                        "end": {
                          "line": 357,
                          "column": 43
                        }
                      },
                      "name": "row"
                    }
                  }
                ]
              },
              {
                "start": 11150,
                "end": 11163,
                "type": "Attribute",
                "name": "cell",
                "value": [
                  {
                    "start": 11156,
                    "end": 11162,
                    "type": "MustacheTag",
                    "expression": {
                      "type": "Identifier",
                      "start": 11157,
                      "end": 11161,
                      "loc": {
                        "start": {
                          "line": 357,
                          "column": 53
                        },
                        "end": {
                          "line": 357,
                          "column": 57
                        }
                      },
                      "name": "cell"
                    }
                  }
                ]
              }
            ],
            "children": [
              {
                "start": 11164,
                "end": 11183,
                "type": "Text",
                "raw": "\n                  ",
                "data": "\n                  "
              },
              {
                "start": 11183,
                "end": 11249,
                "type": "MustacheTag",
                "expression": {
                  "type": "ConditionalExpression",
                  "start": 11184,
                  "end": 11248,
                  "loc": {
                    "start": {
                      "line": 358,
                      "column": 19
                    },
                    "end": {
                      "line": 358,
                      "column": 83
                    }
                  },
                  "test": {
                    "type": "MemberExpression",
                    "start": 11184,
                    "end": 11202,
                    "loc": {
                      "start": {
                        "line": 358,
                        "column": 19
                      },
                      "end": {
                        "line": 358,
                        "column": 37
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 11184,
                      "end": 11194,
                      "loc": {
                        "start": {
                          "line": 358,
                          "column": 19
                        },
                        "end": {
                          "line": 358,
                          "column": 29
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 11184,
                        "end": 11191,
                        "loc": {
                          "start": {
                            "line": 358,
                            "column": 19
                          },
                          "end": {
                            "line": 358,
                            "column": 26
                          }
                        },
                        "name": "headers"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 11192,
                        "end": 11193,
                        "loc": {
                          "start": {
                            "line": 358,
                            "column": 27
                          },
                          "end": {
                            "line": 358,
                            "column": 28
                          }
                        },
                        "name": "j"
                      },
                      "computed": true,
                      "optional": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 11195,
                      "end": 11202,
                      "loc": {
                        "start": {
                          "line": 358,
                          "column": 30
                        },
                        "end": {
                          "line": 358,
                          "column": 37
                        }
                      },
                      "name": "display"
                    },
                    "computed": false,
                    "optional": false
                  },
                  "consequent": {
                    "type": "CallExpression",
                    "start": 11205,
                    "end": 11235,
                    "loc": {
                      "start": {
                        "line": 358,
                        "column": 40
                      },
                      "end": {
                        "line": 358,
                        "column": 70
                      }
                    },
                    "callee": {
                      "type": "MemberExpression",
                      "start": 11205,
                      "end": 11223,
                      "loc": {
                        "start": {
                          "line": 358,
                          "column": 40
                        },
                        "end": {
                          "line": 358,
                          "column": 58
                        }
                      },
                      "object": {
                        "type": "MemberExpression",
                        "start": 11205,
                        "end": 11215,
                        "loc": {
                          "start": {
                            "line": 358,
                            "column": 40
                          },
                          "end": {
                            "line": 358,
                            "column": 50
                          }
                        },
                        "object": {
                          "type": "Identifier",
                          "start": 11205,
                          "end": 11212,
                          "loc": {
                            "start": {
                              "line": 358,
                              "column": 40
                            },
                            "end": {
                              "line": 358,
                              "column": 47
                            }
                          },
                          "name": "headers"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 11213,
                          "end": 11214,
                          "loc": {
                            "start": {
                              "line": 358,
                              "column": 48
                            },
                            "end": {
                              "line": 358,
                              "column": 49
                            }
                          },
                          "name": "j"
                        },
                        "computed": true,
                        "optional": false
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 11216,
                        "end": 11223,
                        "loc": {
                          "start": {
                            "line": 358,
                            "column": 51
                          },
                          "end": {
                            "line": 358,
                            "column": 58
                          }
                        },
                        "name": "display"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "start": 11224,
                        "end": 11234,
                        "loc": {
                          "start": {
                            "line": 358,
                            "column": 59
                          },
                          "end": {
                            "line": 358,
                            "column": 69
                          }
                        },
                        "object": {
                          "type": "Identifier",
                          "start": 11224,
                          "end": 11228,
                          "loc": {
                            "start": {
                              "line": 358,
                              "column": 59
                            },
                            "end": {
                              "line": 358,
                              "column": 63
                            }
                          },
                          "name": "cell"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 11229,
                          "end": 11234,
                          "loc": {
                            "start": {
                              "line": 358,
                              "column": 64
                            },
                            "end": {
                              "line": 358,
                              "column": 69
                            }
                          },
                          "name": "value"
                        },
                        "computed": false,
                        "optional": false
                      }
                    ],
                    "optional": false
                  },
                  "alternate": {
                    "type": "MemberExpression",
                    "start": 11238,
                    "end": 11248,
                    "loc": {
                      "start": {
                        "line": 358,
                        "column": 73
                      },
                      "end": {
                        "line": 358,
                        "column": 83
                      }
                    },
                    "object": {
                      "type": "Identifier",
                      "start": 11238,
                      "end": 11242,
                      "loc": {
                        "start": {
                          "line": 358,
                          "column": 73
                        },
                        "end": {
                          "line": 358,
                          "column": 77
                        }
                      },
                      "name": "cell"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 11243,
                      "end": 11248,
                      "loc": {
                        "start": {
                          "line": 358,
                          "column": 78
                        },
                        "end": {
                          "line": 358,
                          "column": 83
                        }
                      },
                      "name": "value"
                    },
                    "computed": false,
                    "optional": false
                  }
                }
              },
              {
                "start": 11249,
                "end": 11266,
                "type": "Text",
                "raw": "\n                ",
                "data": "\n                "
              }
            ],
            "default": false,
            "default_value": "\n                  \n{headers[j].display ? headers[j].display(cell.value) : cell.value}\n\n                \n"
          }
        ],
        [
          "expanded-row",
          {
            "attributes": [
              {
                "start": 11822,
                "end": 11841,
                "type": "Attribute",
                "name": "name",
                "value": [
                  {
                    "start": 11828,
                    "end": 11840,
                    "type": "Text",
                    "raw": "expanded-row",
                    "data": "expanded-row"
                  }
                ]
              },
              {
                "start": 11842,
                "end": 11853,
                "type": "Attribute",
                "name": "row",
                "value": [
                  {
                    "start": 11847,
                    "end": 11852,
                    "type": "MustacheTag",
                    "expression": {
                      "type": "Identifier",
                      "start": 11848,
                      "end": 11851,
                      "loc": {
                        "start": {
                          "line": 378,
                          "column": 48
                        },
                        "end": {
                          "line": 378,
                          "column": 51
                        }
                      },
                      "name": "row"
                    }
                  }
                ]
              }
            ],
            "children": [],
            "default": false,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [],
      "dispatched_events": [
        [
          "click:header--expand",
          {
            "detail": "{ expanded }"
          }
        ],
        [
          "click",
          {
            "detail": "{ row, cell }"
          }
        ],
        [
          "click:header",
          {
            "detail": "{ header, sortDirection }"
          }
        ],
        [
          "click:row",
          {
            "detail": "row"
          }
        ],
        [
          "mouseenter:row",
          {
            "detail": "row"
          }
        ],
        [
          "mouseleave:row",
          {
            "detail": "row"
          }
        ],
        [
          "click:row--expand",
          {
            "detail": "{\n                    row,\n                    expanded: !rowExpanded,\n                  }"
          }
        ],
        [
          "click:cell",
          {
            "detail": "cell"
          }
        ]
      ]
    },
    "DataTableSkeleton": {
      "moduleName": "DataTableSkeleton",
      "props": [
        [
          "columns",
          {
            "kind": "let",
            "value": "5",
            "type": "number",
            "description": "Specify the number of columns"
          }
        ],
        [
          "rows",
          {
            "kind": "let",
            "value": "5",
            "type": "number",
            "description": "Specify the number of rows"
          }
        ],
        [
          "size",
          {
            "kind": "let",
            "type": "\"compact\" | \"short\" | \"tall\"",
            "description": "Set the size of the data table"
          }
        ],
        [
          "zebra",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to apply zebra styles to the datatable rows"
          }
        ],
        [
          "showHeader",
          {
            "kind": "let",
            "value": "true",
            "type": "boolean",
            "description": "Set to `false` to hide the header"
          }
        ],
        [
          "headers",
          {
            "kind": "let",
            "value": "[]",
            "type": "string[]",
            "description": "Set the column headers\nIf `headers` has one more items, `count` is ignored"
          }
        ],
        [
          "showToolbar",
          {
            "kind": "let",
            "value": "true",
            "type": "boolean",
            "description": "Set to `false` to hide the toolbar"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 1921,
            "end": 1929,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 1934,
            "end": 1946,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 1951,
            "end": 1964,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 1969,
            "end": 1982,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "DatePicker": {
      "moduleName": "DatePicker",
      "props": [
        [
          "datePickerType",
          {
            "kind": "let",
            "value": "\"simple\"",
            "type": "\"simple\" | \"single\" | \"range\"",
            "description": "Specify the date picker type"
          }
        ],
        [
          "value",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the date picker input value"
          }
        ],
        [
          "appendTo",
          {
            "kind": "let",
            "type": "HTMLElement",
            "description": "Specify the element to append the calendar to"
          }
        ],
        [
          "dateFormat",
          {
            "kind": "let",
            "value": "\"m/d/Y\"",
            "type": "string",
            "description": "Specify the date format"
          }
        ],
        [
          "maxDate",
          {
            "kind": "let",
            "value": "null",
            "type": "null | string | Date",
            "description": "Specify the maximum date"
          }
        ],
        [
          "minDate",
          {
            "kind": "let",
            "value": "null",
            "type": "null | string | Date",
            "description": "Specify the minimum date"
          }
        ],
        [
          "locale",
          {
            "kind": "let",
            "value": "\"en\"",
            "type": "string",
            "description": "Specify the locale"
          }
        ],
        [
          "short",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to use the short variant"
          }
        ],
        [
          "light",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to enable the light variant"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the date picker element"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 4347,
            "end": 4355,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 4358,
            "end": 4370,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 4373,
            "end": 4386,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 4389,
            "end": 4402,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": [
        [
          "change",
          {
            "detail": "value"
          }
        ]
      ]
    },
    "DatePickerInput": {
      "moduleName": "DatePickerInput",
      "props": [
        [
          "size",
          {
            "kind": "let",
            "type": "\"sm\" | \"xl\"",
            "description": "Set the size of the input"
          }
        ],
        [
          "type",
          {
            "kind": "let",
            "value": "\"text\"",
            "type": "string",
            "description": "Specify the input type"
          }
        ],
        [
          "placeholder",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the input placeholder text"
          }
        ],
        [
          "pattern",
          {
            "kind": "let",
            "value": "\"\\\\d{1,2}\\\\/\\\\d{1,2}\\\\/\\\\d{4}\"",
            "type": "string",
            "description": "Specify the Regular Expression for the input value"
          }
        ],
        [
          "disabled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable the input"
          }
        ],
        [
          "iconDescription",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the ARIA label for the calendar icon"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the input element"
          }
        ],
        [
          "labelText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the label text"
          }
        ],
        [
          "hideLabel",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to visually hide the label text"
          }
        ],
        [
          "invalid",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to indicate an invalid state"
          }
        ],
        [
          "invalidText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the invalid state text"
          }
        ],
        [
          "name",
          {
            "kind": "let",
            "type": "string",
            "description": "Set a name for the input element"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLInputElement",
            "description": "Obtain a reference to the input HTML element"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "input",
          {
            "start": 2802,
            "end": 2810,
            "type": "EventHandler",
            "name": "input",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "keydown",
          {
            "start": 3031,
            "end": 3041,
            "type": "EventHandler",
            "name": "keydown",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "blur",
          {
            "start": 3164,
            "end": 3171,
            "type": "EventHandler",
            "name": "blur",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "DatePickerSkeleton": {
      "moduleName": "DatePickerSkeleton",
      "props": [
        [
          "range",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to use the range variant"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id to be used by the label element"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 336,
            "end": 344,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 347,
            "end": 359,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 362,
            "end": 375,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 378,
            "end": 391,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "Dropdown": {
      "moduleName": "Dropdown",
      "props": [
        [
          "items",
          {
            "kind": "let",
            "value": "[]",
            "type": "DropdownItem[]",
            "description": "Set the dropdown items"
          }
        ],
        [
          "itemToString",
          {
            "kind": "let",
            "type": "(item: DropdownItem) => string",
            "description": "Override the display of a dropdown item"
          }
        ],
        [
          "selectedIndex",
          {
            "kind": "let",
            "type": "number",
            "description": "Specify the selected item index"
          }
        ],
        [
          "type",
          {
            "kind": "let",
            "value": "\"default\"",
            "type": "\"default\" | \"inline\"",
            "description": "Specify the type of dropdown"
          }
        ],
        [
          "size",
          {
            "kind": "let",
            "type": "\"sm\" | \"lg\" | \"xl\"",
            "description": "Specify the size of the dropdown field"
          }
        ],
        [
          "open",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to open the dropdown"
          }
        ],
        [
          "inline",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to use the inline variant"
          }
        ],
        [
          "light",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to enable the light variant"
          }
        ],
        [
          "disabled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable the dropdown"
          }
        ],
        [
          "titleText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the title text"
          }
        ],
        [
          "invalid",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to indicate an invalid state"
          }
        ],
        [
          "invalidText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the invalid state text"
          }
        ],
        [
          "helperText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the helper text"
          }
        ],
        [
          "label",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify the list box label"
          }
        ],
        [
          "translateWithId",
          {
            "kind": "let",
            "type": "(id: any) => string",
            "description": "Override the default translation ids"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the list box component"
          }
        ],
        [
          "name",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify a name attribute for the list box"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLButtonElement",
            "description": "Obtain a reference to the button HTML element"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [],
      "dispatched_events": [
        [
          "select",
          {
            "detail": "{ selectedId, selectedIndex, selectedItem }"
          }
        ]
      ]
    },
    "DropdownSkeleton": {
      "moduleName": "DropdownSkeleton",
      "props": [
        [
          "inline",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to use the inline variant"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 332,
            "end": 340,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 343,
            "end": 355,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 358,
            "end": 371,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 374,
            "end": 387,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "ExpandableTile": {
      "moduleName": "ExpandableTile",
      "props": [
        [
          "expanded",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to expand the tile"
          }
        ],
        [
          "light",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to enable the light variant"
          }
        ],
        [
          "tileMaxHeight",
          {
            "kind": "let",
            "value": "0",
            "type": "number",
            "description": "Specify the max height of the tile  (number of pixels)"
          }
        ],
        [
          "tilePadding",
          {
            "kind": "let",
            "value": "0",
            "type": "number",
            "description": "Specify the padding of the tile (number of pixels)"
          }
        ],
        [
          "tileCollapsedIconText",
          {
            "kind": "let",
            "value": "\"Interact to expand Tile\"",
            "type": "string",
            "description": "Specify the icon text of the collapsed tile"
          }
        ],
        [
          "tileExpandedIconText",
          {
            "kind": "let",
            "value": "\"Interact to collapse Tile\"",
            "type": "string",
            "description": "Specify the icon text of the expanded tile"
          }
        ],
        [
          "tabindex",
          {
            "kind": "let",
            "value": "\"0\"",
            "type": "string",
            "description": "Specify the tabindex"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the top-level div element"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLElement",
            "description": "Obtain a reference to the input HTML element"
          }
        ]
      ],
      "slots": [
        [
          "above",
          {
            "attributes": [
              {
                "start": 2643,
                "end": 2655,
                "type": "Attribute",
                "name": "name",
                "value": [
                  {
                    "start": 2649,
                    "end": 2654,
                    "type": "Text",
                    "raw": "above",
                    "data": "above"
                  }
                ]
              }
            ],
            "children": [],
            "default": false,
            "default_value": ""
          }
        ],
        [
          "below",
          {
            "attributes": [
              {
                "start": 3103,
                "end": 3115,
                "type": "Attribute",
                "name": "name",
                "value": [
                  {
                    "start": 3109,
                    "end": 3114,
                    "type": "Text",
                    "raw": "below",
                    "data": "below"
                  }
                ]
              }
            ],
            "children": [],
            "default": false,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 2951,
            "end": 2959,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "keypress",
          {
            "start": 2175,
            "end": 2186,
            "type": "EventHandler",
            "name": "keypress",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 2968,
            "end": 2980,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 2989,
            "end": 3002,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 3011,
            "end": 3024,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "FileUploader": {
      "moduleName": "FileUploader",
      "props": [
        [
          "status",
          {
            "kind": "let",
            "value": "\"uploading\"",
            "type": "\"uploading\" | \"edit\" | \"complete\"",
            "description": "Specify the file uploader status"
          }
        ],
        [
          "accept",
          {
            "kind": "let",
            "value": "[]",
            "type": "string[]",
            "description": "Specify the accepted file types"
          }
        ],
        [
          "files",
          {
            "kind": "let",
            "value": "[]",
            "type": "string[]",
            "description": "Obtain the uploaded file names"
          }
        ],
        [
          "multiple",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to allow multiple files"
          }
        ],
        [
          "clearFiles",
          {
            "kind": "const",
            "type": "() => any",
            "description": "Override the default behavior of clearing the array of uploaded files"
          }
        ],
        [
          "labelDescription",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the label description"
          }
        ],
        [
          "labelTitle",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the label title"
          }
        ],
        [
          "kind",
          {
            "kind": "let",
            "value": "\"primary\"",
            "type": "\"primary\" | \"secondary\" | \"tertiary\" | \"ghost\" | \"danger\"",
            "description": "Specify the kind of file uploader button"
          }
        ],
        [
          "buttonLabel",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the button label"
          }
        ],
        [
          "iconDescription",
          {
            "kind": "let",
            "value": "\"Provide icon description\"",
            "type": "string",
            "description": "Specify the ARIA label used for the status icons"
          }
        ],
        [
          "name",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify a name attribute for the file button uploader input"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 3096,
            "end": 3104,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 2080,
            "end": 2092,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 2095,
            "end": 2108,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 2111,
            "end": 2124,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "change",
          {
            "start": 2419,
            "end": 2428,
            "type": "EventHandler",
            "name": "change",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "keydown",
          {
            "start": 2884,
            "end": 2894,
            "type": "EventHandler",
            "name": "keydown",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": [
        [
          "add",
          {
            "detail": "files"
          }
        ],
        [
          "remove",
          {
            "detail": "prevFiles.filter((_) => !files.includes(_))"
          }
        ]
      ]
    },
    "FileUploaderButton": {
      "moduleName": "FileUploaderButton",
      "props": [
        [
          "accept",
          {
            "kind": "let",
            "value": "[]",
            "type": "string[]",
            "description": "Specify the accepted file types"
          }
        ],
        [
          "multiple",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to allow multiple files"
          }
        ],
        [
          "disabled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable the input"
          }
        ],
        [
          "disableLabelChanges",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable label changes"
          }
        ],
        [
          "kind",
          {
            "kind": "let",
            "value": "\"primary\"",
            "type": "\"primary\" | \"secondary\" | \"tertiary\" | \"ghost\" | \"danger\"",
            "description": "Specify the kind of file uploader button"
          }
        ],
        [
          "labelText",
          {
            "kind": "let",
            "value": "\"Add file\"",
            "type": "string",
            "description": "Specify the label text"
          }
        ],
        [
          "role",
          {
            "kind": "let",
            "value": "\"button\"",
            "type": "string",
            "description": "Specify the label role"
          }
        ],
        [
          "tabindex",
          {
            "kind": "let",
            "value": "\"0\"",
            "type": "string",
            "description": "Specify `tabindex` attribute"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the input element"
          }
        ],
        [
          "name",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify a name attribute for the input"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLInputElement",
            "description": "Obtain a reference to the input HTML element"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "keydown",
          {
            "start": 1640,
            "end": 1650,
            "type": "EventHandler",
            "name": "keydown",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "change",
          {
            "start": 2017,
            "end": 2042,
            "type": "EventHandler",
            "name": "change",
            "modifiers": ["stopPropagation"],
            "expression": null
          }
        ],
        [
          "click",
          {
            "start": 2277,
            "end": 2285,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "FileUploaderDropContainer": {
      "moduleName": "FileUploaderDropContainer",
      "props": [
        [
          "accept",
          {
            "kind": "let",
            "value": "[]",
            "type": "string[]",
            "description": "Specify the accepted file types"
          }
        ],
        [
          "multiple",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to allow multiple files"
          }
        ],
        [
          "validateFiles",
          {
            "kind": "let",
            "type": "(files: Files) => Files",
            "description": "Override the default behavior of validating uploaded files\nThe default behavior does not validate files"
          }
        ],
        [
          "labelText",
          {
            "kind": "let",
            "value": "\"Add file\"",
            "type": "string",
            "description": "Specify the label text"
          }
        ],
        [
          "role",
          {
            "kind": "let",
            "value": "\"button\"",
            "type": "string",
            "description": "Specify the `role` attribute of the drop container"
          }
        ],
        [
          "disabled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable the input"
          }
        ],
        [
          "tabindex",
          {
            "kind": "let",
            "value": "\"0\"",
            "type": "string",
            "description": "Specify `tabindex` attribute"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the input element"
          }
        ],
        [
          "name",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify a name attribute for the input"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLInputElement",
            "description": "Obtain a reference to the input HTML element"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "dragover",
          {
            "start": 1585,
            "end": 1596,
            "type": "EventHandler",
            "name": "dragover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "dragleave",
          {
            "start": 1762,
            "end": 1774,
            "type": "EventHandler",
            "name": "dragleave",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "drop",
          {
            "start": 1942,
            "end": 1949,
            "type": "EventHandler",
            "name": "drop",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "keydown",
          {
            "start": 2276,
            "end": 2286,
            "type": "EventHandler",
            "name": "keydown",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "change",
          {
            "start": 2813,
            "end": 2822,
            "type": "EventHandler",
            "name": "change",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "click",
          {
            "start": 2937,
            "end": 2945,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": [
        [
          "add",
          {
            "detail": "validateFiles(target.files)"
          }
        ]
      ]
    },
    "FileUploaderItem": {
      "moduleName": "FileUploaderItem",
      "props": [
        [
          "status",
          {
            "kind": "let",
            "value": "\"uploading\"",
            "type": "\"uploading\" | \"edit\" | \"complete\"",
            "description": "Specify the file uploader status"
          }
        ],
        [
          "iconDescription",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the ARIA label used for the status icons"
          }
        ],
        [
          "invalid",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to indicate an invalid state"
          }
        ],
        [
          "errorSubject",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the error subject text"
          }
        ],
        [
          "errorBody",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the error body text"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the top-level element"
          }
        ],
        [
          "name",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the file uploader name"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "mouseover",
          {
            "start": 1183,
            "end": 1195,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 1198,
            "end": 1211,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 1214,
            "end": 1227,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": [
        [
          "delete",
          {
            "detail": "id"
          }
        ]
      ]
    },
    "FileUploaderSkeleton": {
      "moduleName": "FileUploaderSkeleton",
      "props": [],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 173,
            "end": 181,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 184,
            "end": 196,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 199,
            "end": 212,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 215,
            "end": 228,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "Filename": {
      "moduleName": "Filename",
      "props": [
        [
          "status",
          {
            "kind": "let",
            "value": "\"uploading\"",
            "type": "\"uploading\" | \"edit\" | \"complete\"",
            "description": "Specify the file name status"
          }
        ],
        [
          "iconDescription",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the ARIA label used for the status icons"
          }
        ],
        [
          "invalid",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to indicate an invalid state"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 1058,
            "end": 1066,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "keydown",
          {
            "start": 1071,
            "end": 1081,
            "type": "EventHandler",
            "name": "keydown",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "FluidForm": {
      "moduleName": "FluidForm",
      "props": [],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [],
      "dispatched_events": []
    },
    "Form": {
      "moduleName": "Form",
      "props": [],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 53,
            "end": 61,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 64,
            "end": 76,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 79,
            "end": 92,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 95,
            "end": 108,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "submit",
          {
            "start": 111,
            "end": 135,
            "type": "EventHandler",
            "name": "submit",
            "modifiers": ["preventDefault"],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "FormGroup": {
      "moduleName": "FormGroup",
      "props": [
        [
          "invalid",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to indicate an invalid state"
          }
        ],
        [
          "message",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to render a form requirement"
          }
        ],
        [
          "messageText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the message text"
          }
        ],
        [
          "legendText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the legend text"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 595,
            "end": 603,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 606,
            "end": 618,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 621,
            "end": 634,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 637,
            "end": 650,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "FormItem": {
      "moduleName": "FormItem",
      "props": [],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 57,
            "end": 65,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 68,
            "end": 80,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 83,
            "end": 96,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 99,
            "end": 112,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "FormLabel": {
      "moduleName": "FormLabel",
      "props": [
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id to be used by the label element"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 227,
            "end": 235,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 238,
            "end": 250,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 253,
            "end": 266,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 269,
            "end": 282,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "Grid": {
      "moduleName": "Grid",
      "props": [
        [
          "as",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to render a custom HTML element\nProps are destructured as `props` in the default slot (e.g. <Grid let:props><header {...props}>...</header></Grid>)"
          }
        ],
        [
          "condensed",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to use the condensed variant"
          }
        ],
        [
          "narrow",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to use the narrow variant"
          }
        ],
        [
          "fullWidth",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to use the fullWidth variant"
          }
        ],
        [
          "noGutter",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to remove the gutter"
          }
        ],
        [
          "noGutterLeft",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to remove the left gutter"
          }
        ],
        [
          "noGutterRight",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to remove the right gutter"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [],
      "dispatched_events": []
    },
    "Header": {
      "moduleName": "Header",
      "props": [
        [
          "expandedByDefault",
          {
            "kind": "let",
            "value": "true",
            "type": "boolean",
            "description": "Set to `false` to hide the side nav by default"
          }
        ],
        [
          "isSideNavOpen",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to open the side nav"
          }
        ],
        [
          "uiShellAriaLabel",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify the ARIA label for the header"
          }
        ],
        [
          "href",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify the `href` attribute"
          }
        ],
        [
          "company",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify the company name"
          }
        ],
        [
          "platformName",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the platform name\nAlternatively, use the named slot \"platform\" (e.g. <span slot=\"platform\">...</span>)"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLAnchorElement",
            "description": "Obtain a reference to the HTML anchor element"
          }
        ]
      ],
      "slots": [
        [
          "skip-to-content",
          {
            "attributes": [
              {
                "start": 1394,
                "end": 1416,
                "type": "Attribute",
                "name": "name",
                "value": [
                  {
                    "start": 1400,
                    "end": 1415,
                    "type": "Text",
                    "raw": "skip-to-content",
                    "data": "skip-to-content"
                  }
                ]
              }
            ],
            "children": [],
            "default": false,
            "default_value": ""
          }
        ],
        [
          "platform",
          {
            "attributes": [
              {
                "start": 1736,
                "end": 1751,
                "type": "Attribute",
                "name": "name",
                "value": [
                  {
                    "start": 1742,
                    "end": 1750,
                    "type": "Text",
                    "raw": "platform",
                    "data": "platform"
                  }
                ]
              }
            ],
            "children": [
              {
                "start": 1752,
                "end": 1766,
                "type": "MustacheTag",
                "expression": {
                  "type": "Identifier",
                  "start": 1753,
                  "end": 1765,
                  "loc": {
                    "start": {
                      "line": 72,
                      "column": 27
                    },
                    "end": {
                      "line": 72,
                      "column": 39
                    }
                  },
                  "name": "platformName"
                }
              }
            ],
            "default": false,
            "default_value": "{platformName}\n"
          }
        ],
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 1610,
            "end": 1618,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "HeaderAction": {
      "moduleName": "HeaderAction",
      "props": [
        [
          "isOpen",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to open the panel"
          }
        ],
        [
          "icon",
          {
            "kind": "let",
            "type": "{ render: typeof import(\"carbon-icons-svelte/lib/Add16\").default; skeleton: boolean; }",
            "description": "Specify the icon props"
          }
        ],
        [
          "text",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify the text\nAlternatively, use the named slot \"text\" (e.g. <div slot=\"text\">...</div>)"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLButtonElement",
            "description": "Obtain a reference to the button HTML element"
          }
        ]
      ],
      "slots": [
        [
          "text",
          {
            "attributes": [
              {
                "start": 1781,
                "end": 1792,
                "type": "Attribute",
                "name": "name",
                "value": [
                  {
                    "start": 1787,
                    "end": 1791,
                    "type": "Text",
                    "raw": "text",
                    "data": "text"
                  }
                ]
              }
            ],
            "children": [
              {
                "start": 1793,
                "end": 1800,
                "type": "Text",
                "raw": "\n      ",
                "data": "\n      "
              },
              {
                "start": 1800,
                "end": 1834,
                "type": "IfBlock",
                "expression": {
                  "type": "Identifier",
                  "start": 1805,
                  "end": 1809,
                  "loc": {
                    "start": {
                      "line": 79,
                      "column": 11
                    },
                    "end": {
                      "line": 79,
                      "column": 15
                    }
                  },
                  "name": "text"
                },
                "children": [
                  {
                    "start": 1810,
                    "end": 1829,
                    "type": "Element",
                    "name": "span",
                    "attributes": [],
                    "children": [
                      {
                        "start": 1816,
                        "end": 1822,
                        "type": "MustacheTag",
                        "expression": {
                          "type": "Identifier",
                          "start": 1817,
                          "end": 1821,
                          "loc": {
                            "start": {
                              "line": 79,
                              "column": 23
                            },
                            "end": {
                              "line": 79,
                              "column": 27
                            }
                          },
                          "name": "text"
                        }
                      }
                    ]
                  }
                ]
              },
              {
                "start": 1834,
                "end": 1839,
                "type": "Text",
                "raw": "\n    ",
                "data": "\n    "
              }
            ],
            "default": false,
            "default_value": "\n      \n{#if text}<span>{text}</span>{/if}\n\n    \n"
          }
        ],
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 1577,
            "end": 1585,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": [["close", {}]]
    },
    "HeaderActionLink": {
      "moduleName": "HeaderActionLink",
      "props": [
        [
          "linkIsActive",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to use the active state"
          }
        ],
        [
          "href",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify the `href` attribute"
          }
        ],
        [
          "icon",
          {
            "kind": "let",
            "type": "{ render: typeof import(\"carbon-icons-svelte/lib/Add16\").default; skeleton: boolean; }",
            "description": "Specify the icon props"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLAnchorElement",
            "description": "Obtain a reference to the HTML anchor element"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [],
      "dispatched_events": []
    },
    "HeaderActionSearch": {
      "moduleName": "HeaderActionSearch",
      "props": [
        [
          "searchIsActive",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to focus the search"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [],
      "dispatched_events": [
        ["focusInputSearch", {}],
        ["focusOutInputSearch", {}],
        [
          "inputSearch",
          {
            "detail": "params"
          }
        ]
      ]
    },
    "HeaderGlobalAction": {
      "moduleName": "HeaderGlobalAction",
      "props": [
        [
          "isActive",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to use the active variant"
          }
        ],
        [
          "icon",
          {
            "kind": "let",
            "type": "typeof import(\"carbon-icons-svelte/lib/Add16\").default",
            "description": "Specify the icon to render"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLButtonElement",
            "description": "Obtain a reference to the HTML button element"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [
              {
                "start": 603,
                "end": 608,
                "type": "Text",
                "raw": "\n    ",
                "data": "\n    "
              },
              {
                "start": 608,
                "end": 642,
                "type": "InlineComponent",
                "name": "svelte:component",
                "attributes": [],
                "children": [],
                "expression": {
                  "type": "Identifier",
                  "start": 633,
                  "end": 637,
                  "loc": {
                    "start": {
                      "line": 30,
                      "column": 29
                    },
                    "end": {
                      "line": 30,
                      "column": 33
                    }
                  },
                  "name": "icon"
                }
              },
              {
                "start": 642,
                "end": 645,
                "type": "Text",
                "raw": "\n  ",
                "data": "\n  "
              }
            ],
            "default": true,
            "default_value": "\n    \n<svelte:component this=\"{icon}\" />\n\n  \n"
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 584,
            "end": 592,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "HeaderNav": {
      "moduleName": "HeaderNav",
      "props": [
        [
          "ariaLabel",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify the ARIA label for the nav"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [],
      "dispatched_events": []
    },
    "HeaderNavItem": {
      "moduleName": "HeaderNavItem",
      "props": [
        [
          "href",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify the `href` attribute"
          }
        ],
        [
          "text",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify the text"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLAnchorElement",
            "description": "Obtain a reference to the HTML anchor element"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 588,
            "end": 596,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 601,
            "end": 613,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 618,
            "end": 631,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 636,
            "end": 649,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "keyup",
          {
            "start": 654,
            "end": 662,
            "type": "EventHandler",
            "name": "keyup",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "keydown",
          {
            "start": 667,
            "end": 677,
            "type": "EventHandler",
            "name": "keydown",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "focus",
          {
            "start": 682,
            "end": 690,
            "type": "EventHandler",
            "name": "focus",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "blur",
          {
            "start": 695,
            "end": 702,
            "type": "EventHandler",
            "name": "blur",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "HeaderNavMenu": {
      "moduleName": "HeaderNavMenu",
      "props": [
        [
          "expanded",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to toggle the expanded state"
          }
        ],
        [
          "href",
          {
            "kind": "let",
            "value": "\"/\"",
            "type": "string",
            "description": "Specify the `href` attribute"
          }
        ],
        [
          "text",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify the text"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLAnchorElement",
            "description": "Obtain a reference to the HTML anchor element"
          }
        ],
        [
          "iconDescription",
          {
            "kind": "let",
            "value": "\"Expand/Collapse\"",
            "type": "string",
            "description": "Specify the ARIA label for the chevron icon"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "keydown",
          {
            "start": 1268,
            "end": 1278,
            "type": "EventHandler",
            "name": "keydown",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "click",
          {
            "start": 1390,
            "end": 1413,
            "type": "EventHandler",
            "name": "click",
            "modifiers": ["preventDefault"],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 1418,
            "end": 1430,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 1435,
            "end": 1448,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 1453,
            "end": 1466,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "keyup",
          {
            "start": 1471,
            "end": 1479,
            "type": "EventHandler",
            "name": "keyup",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "focus",
          {
            "start": 1484,
            "end": 1492,
            "type": "EventHandler",
            "name": "focus",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "blur",
          {
            "start": 1497,
            "end": 1504,
            "type": "EventHandler",
            "name": "blur",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "HeaderPanelDivider": {
      "moduleName": "HeaderPanelDivider",
      "props": [],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [],
      "dispatched_events": []
    },
    "HeaderPanelLink": {
      "moduleName": "HeaderPanelLink",
      "props": [
        [
          "href",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify the `href` attribute"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLAnchorElement",
            "description": "Obtain a reference to the HTML anchor element"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 494,
            "end": 502,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "HeaderPanelLinks": {
      "moduleName": "HeaderPanelLinks",
      "props": [],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [],
      "dispatched_events": []
    },
    "HeaderUtilities": {
      "moduleName": "HeaderUtilities",
      "props": [],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [],
      "dispatched_events": []
    },
    "Icon": {
      "moduleName": "Icon",
      "props": [
        [
          "render",
          {
            "kind": "let",
            "type": "typeof import(\"carbon-icons-svelte/lib/Add16\").default",
            "description": "Specify the icon from `carbon-icons-svelte` to render\nIcon size must be 16px (e.g. `Add16`, `Task16`)"
          }
        ],
        [
          "skeleton",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to display the skeleton state"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 635,
            "end": 643,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 648,
            "end": 660,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 665,
            "end": 678,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 683,
            "end": 696,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "IconSkeleton": {
      "moduleName": "IconSkeleton",
      "props": [
        [
          "size",
          {
            "kind": "let",
            "value": "16",
            "type": "number",
            "description": "Set the size of the icon"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 243,
            "end": 251,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 254,
            "end": 266,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 269,
            "end": 282,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 285,
            "end": 298,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "InlineLoading": {
      "moduleName": "InlineLoading",
      "props": [
        [
          "status",
          {
            "kind": "let",
            "value": "\"active\"",
            "type": "\"active\" | \"inactive\" | \"finished\" | \"error\"",
            "description": "Set the loading status"
          }
        ],
        [
          "description",
          {
            "kind": "let",
            "type": "string",
            "description": "Set the loading description"
          }
        ],
        [
          "iconDescription",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify the ARIA label for the loading icon"
          }
        ],
        [
          "successDelay",
          {
            "kind": "let",
            "value": "1500",
            "type": "number",
            "description": "Specify the timeout delay (ms) after `status` is set to \"success\""
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 1246,
            "end": 1254,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 1257,
            "end": 1269,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 1272,
            "end": 1285,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 1288,
            "end": 1301,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": [["success", {}]]
    },
    "InlineNotification": {
      "moduleName": "InlineNotification",
      "props": [
        [
          "notificationType",
          {
            "kind": "let",
            "value": "\"inline\"",
            "type": "\"toast\" | \"inline\"",
            "description": "Set the type of notification"
          }
        ],
        [
          "kind",
          {
            "kind": "let",
            "value": "\"error\"",
            "type": "\"error\" | \"info\" | \"info-square\" | \"success\" | \"warning\" | \"warning-alt\"",
            "description": "Specify the kind of notification"
          }
        ],
        [
          "lowContrast",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to use the low contrast variant"
          }
        ],
        [
          "timeout",
          {
            "kind": "let",
            "value": "0",
            "type": "number",
            "description": "Set the timeout duration (ms) to hide the notification after opening it"
          }
        ],
        [
          "role",
          {
            "kind": "let",
            "value": "\"alert\"",
            "type": "string",
            "description": "Set the `role` attribute"
          }
        ],
        [
          "title",
          {
            "kind": "let",
            "value": "\"Title\"",
            "type": "string",
            "description": "Specify the title text"
          }
        ],
        [
          "subtitle",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the subtitle text"
          }
        ],
        [
          "hideCloseButton",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to hide the close button"
          }
        ],
        [
          "iconDescription",
          {
            "kind": "let",
            "value": "\"Closes notification\"",
            "type": "string",
            "description": "Specify the ARIA label for the icon"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ],
        [
          "actions",
          {
            "attributes": [
              {
                "start": 2639,
                "end": 2653,
                "type": "Attribute",
                "name": "name",
                "value": [
                  {
                    "start": 2645,
                    "end": 2652,
                    "type": "Text",
                    "raw": "actions",
                    "data": "actions"
                  }
                ]
              }
            ],
            "children": [],
            "default": false,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 2160,
            "end": 2168,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 2173,
            "end": 2185,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 2190,
            "end": 2203,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 2208,
            "end": 2221,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": [["close", {}]]
    },
    "Link": {
      "moduleName": "Link",
      "props": [
        [
          "href",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify the href value"
          }
        ],
        [
          "inline",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to use the inline variant"
          }
        ],
        [
          "disabled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable the checkbox"
          }
        ],
        [
          "visited",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to allow visited styles"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLAnchorElement | HTMLParagraphElement",
            "description": "Obtain a reference to the top-level HTML element"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 1308,
            "end": 1316,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 1321,
            "end": 1333,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 1338,
            "end": 1351,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 1356,
            "end": 1369,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "ListBox": {
      "moduleName": "ListBox",
      "props": [
        [
          "size",
          {
            "kind": "let",
            "type": "\"sm\" | \"xl\"",
            "description": "Set the size of the list box"
          }
        ],
        [
          "type",
          {
            "kind": "let",
            "value": "\"default\"",
            "type": "\"default\" | \"inline\"",
            "description": "Set the type of the list box"
          }
        ],
        [
          "open",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to open the list box"
          }
        ],
        [
          "light",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to enable the light variant"
          }
        ],
        [
          "disabled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable the list box"
          }
        ],
        [
          "invalid",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to indicate an invalid state"
          }
        ],
        [
          "invalidText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the invalid state text"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "keydown",
          {
            "start": 1252,
            "end": 1262,
            "type": "EventHandler",
            "name": "keydown",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "click",
          {
            "start": 1358,
            "end": 1397,
            "type": "EventHandler",
            "name": "click",
            "modifiers": ["preventDefault", "stopPropagation"],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "ListBoxField": {
      "moduleName": "ListBoxField",
      "props": [
        [
          "disabled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable the list box field"
          }
        ],
        [
          "role",
          {
            "kind": "let",
            "value": "\"combobox\"",
            "type": "string",
            "description": "Specify the role attribute"
          }
        ],
        [
          "tabindex",
          {
            "kind": "let",
            "value": "\"-1\"",
            "type": "string",
            "description": "Specify the tabindex"
          }
        ],
        [
          "translationIds",
          {
            "kind": "const",
            "value": "{ close: \"close\", open: \"open\" }",
            "type": "{ close: \"close\"; open: \"open\"; }",
            "description": "Default translation ids"
          }
        ],
        [
          "translateWithId",
          {
            "kind": "let",
            "type": "(id: ListBoxFieldTranslationId) => string",
            "description": "Override the default translation ids"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the top-level element"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLElement",
            "description": "Obtain a reference to the top-level HTML element"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 1863,
            "end": 1871,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 1874,
            "end": 1886,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 1889,
            "end": 1902,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 1905,
            "end": 1918,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "keydown",
          {
            "start": 1921,
            "end": 1962,
            "type": "EventHandler",
            "name": "keydown",
            "modifiers": ["preventDefault", "stopPropagation"],
            "expression": null
          }
        ],
        [
          "blur",
          {
            "start": 1965,
            "end": 1972,
            "type": "EventHandler",
            "name": "blur",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "ListBoxMenu": {
      "moduleName": "ListBoxMenu",
      "props": [
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the top-level element"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLDivElement",
            "description": "Obtain a reference to the input HTML element"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "scroll",
          {
            "start": 403,
            "end": 412,
            "type": "EventHandler",
            "name": "scroll",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "ListBoxMenuIcon": {
      "moduleName": "ListBoxMenuIcon",
      "props": [
        [
          "open",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to open the list box menu icon"
          }
        ],
        [
          "translationIds",
          {
            "kind": "const",
            "value": "{ close: \"close\", open: \"open\" }",
            "type": "{ close: \"close\"; open: \"open\" }",
            "description": "Default translation ids"
          }
        ],
        [
          "translateWithId",
          {
            "kind": "let",
            "type": "(id: ListBoxMenuIconTranslationId) => string",
            "description": "Override the default translation ids"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 982,
            "end": 1005,
            "type": "EventHandler",
            "name": "click",
            "modifiers": ["preventDefault"],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "ListBoxMenuItem": {
      "moduleName": "ListBoxMenuItem",
      "props": [
        [
          "active",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to enable the active state"
          }
        ],
        [
          "highlighted",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to enable the highlighted state"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 461,
            "end": 469,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 472,
            "end": 485,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 488,
            "end": 501,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "ListBoxSelection": {
      "moduleName": "ListBoxSelection",
      "props": [
        [
          "selectionCount",
          {
            "kind": "let",
            "type": "any",
            "description": "Specify the number of selected items"
          }
        ],
        [
          "disabled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable the list box selection"
          }
        ],
        [
          "translationIds",
          {
            "kind": "const",
            "value": "{     clearAll: \"clearAll\",     clearSelection: \"clearSelection\",   }",
            "type": "{ clearAll: \"clearAll\"; clearSelection: \"clearSelection\" }",
            "description": "Default translation ids"
          }
        ],
        [
          "translateWithId",
          {
            "kind": "let",
            "type": "(id: ListBoxSelectionTranslationId) => string",
            "description": "Override the default translation ids"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLElement",
            "description": "Obtain a reference to the top-level HTML element"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [],
      "dispatched_events": [
        [
          "clear",
          {
            "detail": "e"
          }
        ]
      ]
    },
    "ListItem": {
      "moduleName": "ListItem",
      "props": [],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 57,
            "end": 65,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 68,
            "end": 80,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 83,
            "end": 96,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 99,
            "end": 112,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "Loading": {
      "moduleName": "Loading",
      "props": [
        [
          "small",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to use the small variant"
          }
        ],
        [
          "active",
          {
            "kind": "let",
            "value": "true",
            "type": "boolean",
            "description": "Set to `false` to disable the active state"
          }
        ],
        [
          "withOverlay",
          {
            "kind": "let",
            "value": "true",
            "type": "boolean",
            "description": "Set to `false` to disable the overlay"
          }
        ],
        [
          "description",
          {
            "kind": "let",
            "value": "\"Active loading indicator\"",
            "type": "string",
            "description": "Specify the label description"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the label element"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [],
      "dispatched_events": []
    },
    "Modal": {
      "moduleName": "Modal",
      "props": [
        [
          "size",
          {
            "kind": "let",
            "type": "\"xs\" | \"sm\" | \"lg\"",
            "description": "Set the size of the modal"
          }
        ],
        [
          "open",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to open the modal"
          }
        ],
        [
          "danger",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to use the danger variant"
          }
        ],
        [
          "alert",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to enable alert mode"
          }
        ],
        [
          "passiveModal",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to use the passive variant"
          }
        ],
        [
          "modalHeading",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify the modal heading"
          }
        ],
        [
          "modalLabel",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify the modal label"
          }
        ],
        [
          "modalAriaLabel",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify the ARIA label for the modal"
          }
        ],
        [
          "iconDescription",
          {
            "kind": "let",
            "value": "\"Close the modal\"",
            "type": "string",
            "description": "Specify the ARIA label for the close icon"
          }
        ],
        [
          "hasForm",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` if the modal contains form elements"
          }
        ],
        [
          "hasScrollingContent",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` if the modal contains scrolling content"
          }
        ],
        [
          "primaryButtonText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the primary button text"
          }
        ],
        [
          "primaryButtonDisabled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable the primary button"
          }
        ],
        [
          "shouldSubmitOnEnter",
          {
            "kind": "let",
            "value": "true",
            "type": "boolean",
            "description": "Set to `true` for the primary button to be triggered when pressing \"Enter\""
          }
        ],
        [
          "secondaryButtonText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the secondary button text"
          }
        ],
        [
          "selectorPrimaryFocus",
          {
            "kind": "let",
            "value": "\"[data-modal-primary-focus]\"",
            "type": "string",
            "description": "Specify a selector to be focused when opening the modal"
          }
        ],
        [
          "preventCloseOnClickOutside",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to prevent the modal from closing when clicking outside"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the top-level element"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLElement",
            "description": "Obtain a reference to the top-level HTML element"
          }
        ]
      ],
      "slots": [
        [
          "label",
          {
            "attributes": [
              {
                "start": 5691,
                "end": 5703,
                "type": "Attribute",
                "name": "name",
                "value": [
                  {
                    "start": 5697,
                    "end": 5702,
                    "type": "Text",
                    "raw": "label",
                    "data": "label"
                  }
                ]
              }
            ],
            "children": [
              {
                "start": 5704,
                "end": 5716,
                "type": "MustacheTag",
                "expression": {
                  "type": "Identifier",
                  "start": 5705,
                  "end": 5715,
                  "loc": {
                    "start": {
                      "line": 233,
                      "column": 30
                    },
                    "end": {
                      "line": 233,
                      "column": 40
                    }
                  },
                  "name": "modalLabel"
                }
              }
            ],
            "default": false,
            "default_value": "{modalLabel}\n"
          }
        ],
        [
          "heading",
          {
            "attributes": [
              {
                "start": 5838,
                "end": 5852,
                "type": "Attribute",
                "name": "name",
                "value": [
                  {
                    "start": 5844,
                    "end": 5851,
                    "type": "Text",
                    "raw": "heading",
                    "data": "heading"
                  }
                ]
              }
            ],
            "children": [
              {
                "start": 5853,
                "end": 5867,
                "type": "MustacheTag",
                "expression": {
                  "type": "Identifier",
                  "start": 5854,
                  "end": 5866,
                  "loc": {
                    "start": {
                      "line": 237,
                      "column": 30
                    },
                    "end": {
                      "line": 237,
                      "column": 42
                    }
                  },
                  "name": "modalHeading"
                }
              }
            ],
            "default": false,
            "default_value": "{modalHeading}\n"
          }
        ],
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "keydown",
          {
            "start": 4402,
            "end": 4412,
            "type": "EventHandler",
            "name": "keydown",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "click",
          {
            "start": 4620,
            "end": 4628,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 4764,
            "end": 4776,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 4779,
            "end": 4792,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 4795,
            "end": 4808,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": [
        ["submit", {}],
        ["click:button--secondary", {}],
        ["close", {}],
        ["open", {}]
      ]
    },
    "ModalBody": {
      "moduleName": "ModalBody",
      "props": [
        [
          "hasForm",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` if the modal contains form elements"
          }
        ],
        [
          "hasScrollingContent",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` if the modal contains scrolling content"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [],
      "dispatched_events": []
    },
    "ModalFooter": {
      "moduleName": "ModalFooter",
      "props": [
        [
          "primaryButtonText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the primary button text"
          }
        ],
        [
          "primaryButtonDisabled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable the primary button"
          }
        ],
        [
          "primaryClass",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify a class for the primary button"
          }
        ],
        [
          "secondaryButtonText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the secondary button text"
          }
        ],
        [
          "secondaryClass",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify a class for the secondary button"
          }
        ],
        [
          "danger",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to use the danger variant"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [],
      "dispatched_events": []
    },
    "ModalHeader": {
      "moduleName": "ModalHeader",
      "props": [
        [
          "title",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the modal title"
          }
        ],
        [
          "label",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the modal label"
          }
        ],
        [
          "labelClass",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the label class"
          }
        ],
        [
          "titleClass",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the title class"
          }
        ],
        [
          "closeClass",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the close class"
          }
        ],
        [
          "closeIconClass",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the close icon class"
          }
        ],
        [
          "iconDescription",
          {
            "kind": "let",
            "value": "\"Close\"",
            "type": "string",
            "description": "Specify the ARIA label for the close icon"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 1502,
            "end": 1510,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "MultiSelect": {
      "moduleName": "MultiSelect",
      "props": [
        [
          "items",
          {
            "kind": "let",
            "value": "[]",
            "type": "MultiSelectItem[]",
            "description": "Set the multiselect items"
          }
        ],
        [
          "itemToString",
          {
            "kind": "let",
            "type": "(item: MultiSelectItem) => string",
            "description": "Override the display of a multiselect item"
          }
        ],
        [
          "selectedIds",
          {
            "kind": "let",
            "value": "[]",
            "type": "MultiSelectItemId[]",
            "description": "Set the selected ids"
          }
        ],
        [
          "value",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the multiselect value"
          }
        ],
        [
          "size",
          {
            "kind": "let",
            "type": "\"sm\" | \"lg\" | \"xl\"",
            "description": "Set the size of the combobox"
          }
        ],
        [
          "type",
          {
            "kind": "let",
            "value": "\"default\"",
            "type": "\"default\" | \"inline\"",
            "description": "Specify the type of multiselect"
          }
        ],
        [
          "selectionFeedback",
          {
            "kind": "let",
            "value": "\"top-after-reopen\"",
            "type": "\"top\" | \"fixed\" | \"top-after-reopen\"",
            "description": "Specify the selection feedback after selecting items"
          }
        ],
        [
          "disabled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable the dropdown"
          }
        ],
        [
          "filterable",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to filter items"
          }
        ],
        [
          "filterItem",
          {
            "kind": "let",
            "type": "(item: MultiSelectItem, value: string) => string",
            "description": "Override the filtering logic\nThe default filtering is an exact string comparison"
          }
        ],
        [
          "open",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to open the dropdown"
          }
        ],
        [
          "light",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to enable the light variant"
          }
        ],
        [
          "locale",
          {
            "kind": "let",
            "value": "\"en\"",
            "type": "string",
            "description": "Specify the locale"
          }
        ],
        [
          "placeholder",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the placeholder text"
          }
        ],
        [
          "sortItem",
          {
            "kind": "let",
            "type": "(a: MultiSelectItem, b: MultiSelectItem) => MultiSelectItem",
            "description": "Override the sorting logic\nThe default sorting compare the item text value"
          }
        ],
        [
          "translateWithId",
          {
            "kind": "let",
            "type": "(id: any) => string",
            "description": "Override the default translation ids"
          }
        ],
        [
          "titleText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the title text"
          }
        ],
        [
          "useTitleInItem",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to pass the item to `itemToString` in the checkbox"
          }
        ],
        [
          "invalid",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to indicate an invalid state"
          }
        ],
        [
          "invalidText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the invalid state text"
          }
        ],
        [
          "helperText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the helper text"
          }
        ],
        [
          "label",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the list box label"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the list box component"
          }
        ],
        [
          "name",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify a name attribute for the select"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "keydown",
          {
            "start": 9267,
            "end": 9277,
            "type": "EventHandler",
            "name": "keydown",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "focus",
          {
            "start": 9769,
            "end": 9777,
            "type": "EventHandler",
            "name": "focus",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "blur",
          {
            "start": 9788,
            "end": 9795,
            "type": "EventHandler",
            "name": "blur",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "NotificationActionButton": {
      "moduleName": "NotificationActionButton",
      "props": [],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 166,
            "end": 174,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 177,
            "end": 189,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 192,
            "end": 205,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 208,
            "end": 221,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "NotificationButton": {
      "moduleName": "NotificationButton",
      "props": [
        [
          "notificationType",
          {
            "kind": "let",
            "value": "\"toast\"",
            "type": "\"toast\" | \"inline\"",
            "description": "Set the type of notification"
          }
        ],
        [
          "renderIcon",
          {
            "kind": "let",
            "type": "typeof import(\"carbon-icons-svelte/lib/Add16\").default",
            "description": "Specify the icon from `carbon-icons-svelte` to render"
          }
        ],
        [
          "title",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify the title of the icon"
          }
        ],
        [
          "iconDescription",
          {
            "kind": "let",
            "value": "\"Close icon\"",
            "type": "string",
            "description": "Specify the ARIA label for the icon"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 934,
            "end": 942,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 945,
            "end": 957,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 960,
            "end": 973,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 976,
            "end": 989,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "NotificationIcon": {
      "moduleName": "NotificationIcon",
      "props": [
        [
          "kind",
          {
            "kind": "let",
            "value": "\"error\"",
            "type": "\"error\" | \"info\" | \"info-square\" | \"success\" | \"warning\" | \"warning-alt\"",
            "description": "Specify the kind of notification icon"
          }
        ],
        [
          "notificationType",
          {
            "kind": "let",
            "value": "\"toast\"",
            "type": "\"toast\" | \"inline\"",
            "description": "Set the type of notification"
          }
        ],
        [
          "iconDescription",
          {
            "kind": "let",
            "value": "\"Closes notification\"",
            "type": "string",
            "description": "Specify the ARIA label for the icon"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [],
      "dispatched_events": []
    },
    "NotificationTextDetails": {
      "moduleName": "NotificationTextDetails",
      "props": [
        [
          "notificationType",
          {
            "kind": "let",
            "value": "\"toast\"",
            "type": "\"toast\" | \"inline\"",
            "description": "Set the type of notification"
          }
        ],
        [
          "title",
          {
            "kind": "let",
            "value": "\"Title\"",
            "type": "string",
            "description": "Specify the title text"
          }
        ],
        [
          "subtitle",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the subtitle text"
          }
        ],
        [
          "caption",
          {
            "kind": "let",
            "value": "\"Caption\"",
            "type": "string",
            "description": "Specify the caption text"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [],
      "dispatched_events": []
    },
    "NumberInput": {
      "moduleName": "NumberInput",
      "props": [
        [
          "size",
          {
            "kind": "let",
            "type": "\"sm\" | \"xl\"",
            "description": "Set the size of the input"
          }
        ],
        [
          "value",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the input value"
          }
        ],
        [
          "step",
          {
            "kind": "let",
            "value": "1",
            "type": "number",
            "description": "Specify the step increment"
          }
        ],
        [
          "max",
          {
            "kind": "let",
            "type": "number",
            "description": "Specify the maximum value"
          }
        ],
        [
          "min",
          {
            "kind": "let",
            "type": "number",
            "description": "Specify the minimum value"
          }
        ],
        [
          "light",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to enable the light variant"
          }
        ],
        [
          "readonly",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` for the input to be read-only"
          }
        ],
        [
          "mobile",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to enable the mobile variant"
          }
        ],
        [
          "allowEmpty",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to allow for an empty value"
          }
        ],
        [
          "disabled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable the input"
          }
        ],
        [
          "iconDescription",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the ARIA label for the increment icons"
          }
        ],
        [
          "invalid",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to indicate an invalid state"
          }
        ],
        [
          "invalidText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the invalid state text"
          }
        ],
        [
          "helperText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the helper text"
          }
        ],
        [
          "label",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the label text"
          }
        ],
        [
          "hideLabel",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to visually hide the label text"
          }
        ],
        [
          "translateWithId",
          {
            "kind": "let",
            "type": "(id: NumberInputTranslationId) => string",
            "description": "Override the default translation ids"
          }
        ],
        [
          "translationIds",
          {
            "kind": "const",
            "value": "{     increment: \"increment\",     decrement: \"decrement\",   }",
            "type": "{ increment: \"increment\"; decrement: \"decrement\" }",
            "description": "Default translation ids"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the input element"
          }
        ],
        [
          "name",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify a name attribute for the input"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLInputElement",
            "description": "Obtain a reference to the input HTML element"
          }
        ]
      ],
      "slots": [
        [
          "label",
          {
            "attributes": [
              {
                "start": 6331,
                "end": 6343,
                "type": "Attribute",
                "name": "name",
                "value": [
                  {
                    "start": 6337,
                    "end": 6342,
                    "type": "Text",
                    "raw": "label",
                    "data": "label"
                  }
                ]
              }
            ],
            "children": [
              {
                "start": 6344,
                "end": 6351,
                "type": "MustacheTag",
                "expression": {
                  "type": "Identifier",
                  "start": 6345,
                  "end": 6350,
                  "loc": {
                    "start": {
                      "line": 262,
                      "column": 30
                    },
                    "end": {
                      "line": 262,
                      "column": 35
                    }
                  },
                  "name": "label"
                }
              }
            ],
            "default": false,
            "default_value": "{label}\n"
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 3989,
            "end": 3997,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 4000,
            "end": 4012,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 4015,
            "end": 4028,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 4031,
            "end": 4044,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "input",
          {
            "start": 6735,
            "end": 6743,
            "type": "EventHandler",
            "name": "input",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": [
        [
          "change",
          {
            "detail": "value"
          }
        ]
      ]
    },
    "NumberInputSkeleton": {
      "moduleName": "NumberInputSkeleton",
      "props": [
        [
          "hideLabel",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to hide the label text"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 202,
            "end": 210,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 213,
            "end": 225,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 228,
            "end": 241,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 244,
            "end": 257,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "OrderedList": {
      "moduleName": "OrderedList",
      "props": [
        [
          "nested",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to use the nested variant"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 238,
            "end": 246,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 249,
            "end": 261,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 264,
            "end": 277,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 280,
            "end": 293,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "OverflowMenu": {
      "moduleName": "OverflowMenu",
      "props": [
        [
          "size",
          {
            "kind": "let",
            "type": "\"sm\" | \"xl\"",
            "description": "Specify the size of the overflow menu"
          }
        ],
        [
          "direction",
          {
            "kind": "let",
            "value": "\"bottom\"",
            "type": "\"top\" | \"bottom\"",
            "description": "Specify the direction of the overflow menu relative to the button"
          }
        ],
        [
          "open",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to open the menu"
          }
        ],
        [
          "light",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to enable the light variant"
          }
        ],
        [
          "flipped",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to flip the menu relative to the button"
          }
        ],
        [
          "menuOptionsClass",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify the menu options class"
          }
        ],
        [
          "icon",
          {
            "kind": "let",
            "type": "typeof import(\"carbon-icons-svelte/lib/Add16\").default",
            "description": "Specify the icon from `carbon-icons-svelte` to render"
          }
        ],
        [
          "iconClass",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify the icon class"
          }
        ],
        [
          "iconDescription",
          {
            "kind": "let",
            "value": "\"Open and close list of options\"",
            "type": "string",
            "description": "Specify the ARIA label for the icon"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the button element"
          }
        ],
        [
          "buttonRef",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLButtonElement",
            "description": "Obtain a reference to the trigger button element"
          }
        ],
        [
          "menuRef",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLUListElement",
            "description": "Obtain a reference to the overflow menu element"
          }
        ]
      ],
      "slots": [
        [
          "menu",
          {
            "attributes": [
              {
                "start": 5113,
                "end": 5124,
                "type": "Attribute",
                "name": "name",
                "value": [
                  {
                    "start": 5119,
                    "end": 5123,
                    "type": "Text",
                    "raw": "menu",
                    "data": "menu"
                  }
                ]
              }
            ],
            "children": [
              {
                "start": 5125,
                "end": 5130,
                "type": "Text",
                "raw": "\n    ",
                "data": "\n    "
              },
              {
                "start": 5130,
                "end": 5293,
                "type": "InlineComponent",
                "name": "svelte:component",
                "attributes": [
                  {
                    "start": 5174,
                    "end": 5204,
                    "type": "Attribute",
                    "name": "aria-label",
                    "value": [
                      {
                        "start": 5186,
                        "end": 5203,
                        "type": "MustacheTag",
                        "expression": {
                          "type": "Identifier",
                          "start": 5187,
                          "end": 5202,
                          "loc": {
                            "start": {
                              "line": 216,
                              "column": 19
                            },
                            "end": {
                              "line": 216,
                              "column": 34
                            }
                          },
                          "name": "iconDescription"
                        }
                      }
                    ]
                  },
                  {
                    "start": 5211,
                    "end": 5236,
                    "type": "Attribute",
                    "name": "title",
                    "value": [
                      {
                        "start": 5218,
                        "end": 5235,
                        "type": "MustacheTag",
                        "expression": {
                          "type": "Identifier",
                          "start": 5219,
                          "end": 5234,
                          "loc": {
                            "start": {
                              "line": 217,
                              "column": 14
                            },
                            "end": {
                              "line": 217,
                              "column": 29
                            }
                          },
                          "name": "iconDescription"
                        }
                      }
                    ]
                  },
                  {
                    "start": 5243,
                    "end": 5286,
                    "type": "Attribute",
                    "name": "class",
                    "value": [
                      {
                        "start": 5250,
                        "end": 5275,
                        "type": "Text",
                        "raw": "bx--overflow-menu__icon ",
                        "data": "bx--overflow-menu__icon "
                      },
                      {
                        "start": 5274,
                        "end": 5285,
                        "type": "MustacheTag",
                        "expression": {
                          "type": "Identifier",
                          "start": 5275,
                          "end": 5284,
                          "loc": {
                            "start": {
                              "line": 218,
                              "column": 38
                            },
                            "end": {
                              "line": 218,
                              "column": 47
                            }
                          },
                          "name": "iconClass"
                        }
                      }
                    ]
                  }
                ],
                "children": [],
                "expression": {
                  "type": "Identifier",
                  "start": 5161,
                  "end": 5165,
                  "loc": {
                    "start": {
                      "line": 215,
                      "column": 13
                    },
                    "end": {
                      "line": 215,
                      "column": 17
                    }
                  },
                  "name": "icon"
                }
              },
              {
                "start": 5293,
                "end": 5296,
                "type": "Text",
                "raw": "\n  ",
                "data": "\n  "
              }
            ],
            "default": false,
            "default_value": "\n    \n<svelte:component\n      this=\"{icon}\"\n      aria-label=\"{iconDescription}\"\n      title=\"{iconDescription}\"\n      class=\"bx--overflow-menu__icon {iconClass}\"\n    />\n\n  \n"
          }
        ],
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 4635,
            "end": 4643,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 4759,
            "end": 4771,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 4774,
            "end": 4787,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 4790,
            "end": 4803,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "keydown",
          {
            "start": 4806,
            "end": 4816,
            "type": "EventHandler",
            "name": "keydown",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": [
        [
          "close",
          {
            "detail": "{ index, text }"
          }
        ]
      ]
    },
    "OverflowMenuItem": {
      "moduleName": "OverflowMenuItem",
      "props": [
        [
          "text",
          {
            "kind": "let",
            "value": "\"Provide text\"",
            "type": "string",
            "description": "Specify the item text\nAlternatively, use the default slot for a custom element"
          }
        ],
        [
          "href",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the `href` attribute if the item is a link"
          }
        ],
        [
          "primaryFocus",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` if the item should be focused when opening the menu"
          }
        ],
        [
          "disabled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable the item"
          }
        ],
        [
          "hasDivider",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to include a divider"
          }
        ],
        [
          "danger",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to use the danger variant"
          }
        ],
        [
          "requireTitle",
          {
            "kind": "let",
            "value": "true",
            "type": "boolean",
            "description": "Set to `false` to omit the button `title` attribute"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the top-level element"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLAnchorElement | HTMLButtonElement",
            "description": "Obtain a reference to the HTML element"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [
              {
                "start": 2927,
                "end": 2936,
                "type": "Text",
                "raw": "\n        ",
                "data": "\n        "
              },
              {
                "start": 2936,
                "end": 3030,
                "type": "Element",
                "name": "div",
                "attributes": [
                  {
                    "start": 2941,
                    "end": 2997,
                    "type": "Class",
                    "name": "bx--overflow-menu-options__option-content",
                    "modifiers": [],
                    "expression": {
                      "type": "Literal",
                      "start": 2991,
                      "end": 2995,
                      "loc": {
                        "start": {
                          "line": 130,
                          "column": 63
                        },
                        "end": {
                          "line": 130,
                          "column": 67
                        }
                      },
                      "value": true,
                      "raw": "true"
                    }
                  }
                ],
                "children": [
                  {
                    "start": 2998,
                    "end": 3009,
                    "type": "Text",
                    "raw": "\n          ",
                    "data": "\n          "
                  },
                  {
                    "start": 3009,
                    "end": 3015,
                    "type": "MustacheTag",
                    "expression": {
                      "type": "Identifier",
                      "start": 3010,
                      "end": 3014,
                      "loc": {
                        "start": {
                          "line": 131,
                          "column": 11
                        },
                        "end": {
                          "line": 131,
                          "column": 15
                        }
                      },
                      "name": "text"
                    }
                  },
                  {
                    "start": 3015,
                    "end": 3024,
                    "type": "Text",
                    "raw": "\n        ",
                    "data": "\n        "
                  }
                ]
              },
              {
                "start": 3030,
                "end": 3037,
                "type": "Text",
                "raw": "\n      ",
                "data": "\n      "
              }
            ],
            "default": true,
            "default_value": "\n        \n<div class:bx--overflow-menu-options__option-content=\"{true}\">\n          {text}\n        </div>\n\n      \n"
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 2656,
            "end": 2664,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "keydown",
          {
            "start": 2726,
            "end": 2736,
            "type": "EventHandler",
            "name": "keydown",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "Pagination": {
      "moduleName": "Pagination",
      "props": [
        [
          "page",
          {
            "kind": "let",
            "value": "1",
            "type": "number",
            "description": "Specify the current page index"
          }
        ],
        [
          "totalItems",
          {
            "kind": "let",
            "value": "0",
            "type": "number",
            "description": "Specify the total number of items"
          }
        ],
        [
          "disabled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable the pagination"
          }
        ],
        [
          "forwardText",
          {
            "kind": "let",
            "value": "\"Next page\"",
            "type": "string",
            "description": "Specify the forward button text"
          }
        ],
        [
          "backwardText",
          {
            "kind": "let",
            "value": "\"Previous page\"",
            "type": "string",
            "description": "Specify the backward button text"
          }
        ],
        [
          "itemsPerPageText",
          {
            "kind": "let",
            "value": "\"Items per page:\"",
            "type": "string",
            "description": "Specify the items per page text"
          }
        ],
        [
          "itemText",
          {
            "kind": "let",
            "type": "(min: number, max: number) => string",
            "description": "Override the item text"
          }
        ],
        [
          "itemRangeText",
          {
            "kind": "let",
            "type": "(min: number, max: number, total: number) => string",
            "description": "Override the item range text"
          }
        ],
        [
          "pageInputDisabled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable the page input"
          }
        ],
        [
          "pageSizeInputDisabled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable the page size input"
          }
        ],
        [
          "pageSize",
          {
            "kind": "let",
            "value": "10",
            "type": "number",
            "description": "Specify the number of items to display in a page"
          }
        ],
        [
          "pageSizes",
          {
            "kind": "let",
            "value": "[10]",
            "type": "number[]",
            "description": "Specify the available page sizes"
          }
        ],
        [
          "pagesUnknown",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` if the number of pages is unknown"
          }
        ],
        [
          "pageText",
          {
            "kind": "let",
            "type": "(page: number) => string",
            "description": "Override the page text"
          }
        ],
        [
          "pageRangeText",
          {
            "kind": "let",
            "type": "(current: number, total: number) => string",
            "description": "Override the page range text"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the top-level element"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [],
      "dispatched_events": [
        [
          "update",
          {
            "detail": "{ pageSize, page }"
          }
        ]
      ]
    },
    "PaginationNav": {
      "moduleName": "PaginationNav",
      "props": [
        [
          "page",
          {
            "kind": "let",
            "value": "0",
            "type": "number",
            "description": "Specify the current page index"
          }
        ],
        [
          "total",
          {
            "kind": "let",
            "value": "10",
            "type": "number",
            "description": "Specify the total number of pages"
          }
        ],
        [
          "shown",
          {
            "kind": "let",
            "value": "10",
            "type": "number",
            "description": "Specify the total number of pages to show"
          }
        ],
        [
          "loop",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to loop the navigation"
          }
        ],
        [
          "forwardText",
          {
            "kind": "let",
            "value": "\"Next page\"",
            "type": "string",
            "description": "Specify the forward button text"
          }
        ],
        [
          "backwardText",
          {
            "kind": "let",
            "value": "\"Previous page\"",
            "type": "string",
            "description": "Specify the backward button text"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [],
      "dispatched_events": [
        [
          "click:button--previous",
          {
            "detail": "{ page }"
          }
        ],
        [
          "click:button--next",
          {
            "detail": "{ page }"
          }
        ],
        [
          "change",
          {
            "detail": "{ page }"
          }
        ]
      ]
    },
    "PaginationSkeleton": {
      "moduleName": "PaginationSkeleton",
      "props": [],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 158,
            "end": 166,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 169,
            "end": 181,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 184,
            "end": 197,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 200,
            "end": 213,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "PasswordInput": {
      "moduleName": "PasswordInput",
      "props": [
        [
          "size",
          {
            "kind": "let",
            "type": "\"sm\" | \"xl\"",
            "description": "Set the size of the input"
          }
        ],
        [
          "value",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the input value"
          }
        ],
        [
          "type",
          {
            "kind": "let",
            "value": "\"password\"",
            "type": "string",
            "description": "Specify the input type"
          }
        ],
        [
          "placeholder",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the placeholder text"
          }
        ],
        [
          "hidePasswordLabel",
          {
            "kind": "let",
            "value": "\"Hide password\"",
            "type": "string",
            "description": "Specify the hide password label text"
          }
        ],
        [
          "showPasswordLabel",
          {
            "kind": "let",
            "value": "\"Show password\"",
            "type": "string",
            "description": "Specify the show password label text"
          }
        ],
        [
          "tooltipAlignment",
          {
            "kind": "let",
            "type": "\"start\" | \"center\" | \"end\"",
            "description": "Set the alignment of the tooltip relative to the icon"
          }
        ],
        [
          "tooltipPosition",
          {
            "kind": "let",
            "type": "\"top\" | \"right\" | \"bottom\" | \"left\"",
            "description": "Set the position of the tooltip relative to the icon"
          }
        ],
        [
          "light",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to enable the light variant"
          }
        ],
        [
          "disabled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable the input"
          }
        ],
        [
          "helperText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the helper text"
          }
        ],
        [
          "labelText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the label text"
          }
        ],
        [
          "hideLabel",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to visually hide the label text"
          }
        ],
        [
          "invalid",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to indicate an invalid state"
          }
        ],
        [
          "invalidText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the text for the invalid state"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the input element"
          }
        ],
        [
          "name",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify a name attribute for the input"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLInputElement",
            "description": "Obtain a reference to the input HTML element"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 2848,
            "end": 2856,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 2859,
            "end": 2871,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 2874,
            "end": 2887,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 2890,
            "end": 2903,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "change",
          {
            "start": 3856,
            "end": 3865,
            "type": "EventHandler",
            "name": "change",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "input",
          {
            "start": 3872,
            "end": 3880,
            "type": "EventHandler",
            "name": "input",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "keydown",
          {
            "start": 3962,
            "end": 3972,
            "type": "EventHandler",
            "name": "keydown",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "focus",
          {
            "start": 3979,
            "end": 3987,
            "type": "EventHandler",
            "name": "focus",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "blur",
          {
            "start": 3994,
            "end": 4001,
            "type": "EventHandler",
            "name": "blur",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "ProgressIndicator": {
      "moduleName": "ProgressIndicator",
      "props": [
        [
          "currentIndex",
          {
            "kind": "let",
            "value": "0",
            "type": "number",
            "description": "Specify the current step index"
          }
        ],
        [
          "vertical",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to use the vertical variant"
          }
        ],
        [
          "spaceEqually",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to specify whether the progress steps should be split equally in size in the div"
          }
        ],
        [
          "preventChangeOnClick",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to prevent updating `currentIndex`"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 1639,
            "end": 1647,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 1650,
            "end": 1662,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 1665,
            "end": 1678,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 1681,
            "end": 1694,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": [
        [
          "change",
          {
            "detail": "index"
          }
        ]
      ]
    },
    "ProgressIndicatorSkeleton": {
      "moduleName": "ProgressIndicatorSkeleton",
      "props": [
        [
          "vertical",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to use the vertical variant"
          }
        ],
        [
          "count",
          {
            "kind": "let",
            "value": "4",
            "type": "number",
            "description": "Specify the number of steps to render"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 387,
            "end": 395,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 398,
            "end": 410,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 413,
            "end": 426,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 429,
            "end": 442,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "ProgressStep": {
      "moduleName": "ProgressStep",
      "props": [
        [
          "complete",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` for the complete variant"
          }
        ],
        [
          "current",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to use the current variant"
          }
        ],
        [
          "disabled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable the progress step"
          }
        ],
        [
          "invalid",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to indicate an invalid state"
          }
        ],
        [
          "description",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the step description"
          }
        ],
        [
          "label",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the step label"
          }
        ],
        [
          "secondaryLabel",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the step secondary label"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the top-level element"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [
              {
                "start": 2759,
                "end": 2800,
                "type": "Attribute",
                "name": "props",
                "value": [
                  {
                    "start": 2766,
                    "end": 2799,
                    "type": "MustacheTag",
                    "expression": {
                      "type": "ObjectExpression",
                      "start": 2767,
                      "end": 2798,
                      "loc": {
                        "start": {
                          "line": 114,
                          "column": 18
                        },
                        "end": {
                          "line": 114,
                          "column": 49
                        }
                      },
                      "properties": [
                        {
                          "type": "Property",
                          "start": 2769,
                          "end": 2796,
                          "loc": {
                            "start": {
                              "line": 114,
                              "column": 20
                            },
                            "end": {
                              "line": 114,
                              "column": 47
                            }
                          },
                          "method": false,
                          "shorthand": false,
                          "computed": false,
                          "key": {
                            "type": "Identifier",
                            "start": 2769,
                            "end": 2774,
                            "loc": {
                              "start": {
                                "line": 114,
                                "column": 20
                              },
                              "end": {
                                "line": 114,
                                "column": 25
                              }
                            },
                            "name": "class"
                          },
                          "value": {
                            "type": "Literal",
                            "start": 2776,
                            "end": 2796,
                            "loc": {
                              "start": {
                                "line": 114,
                                "column": 27
                              },
                              "end": {
                                "line": 114,
                                "column": 47
                              }
                            },
                            "value": "bx--progress-label",
                            "raw": "'bx--progress-label'"
                          },
                          "kind": "init"
                        }
                      ]
                    }
                  }
                ]
              }
            ],
            "children": [
              {
                "start": 2801,
                "end": 2808,
                "type": "Text",
                "raw": "\n      ",
                "data": "\n      "
              },
              {
                "start": 2808,
                "end": 2856,
                "type": "Element",
                "name": "p",
                "attributes": [
                  {
                    "start": 2811,
                    "end": 2844,
                    "type": "Class",
                    "name": "bx--progress-label",
                    "modifiers": [],
                    "expression": {
                      "type": "Literal",
                      "start": 2838,
                      "end": 2842,
                      "loc": {
                        "start": {
                          "line": 115,
                          "column": 36
                        },
                        "end": {
                          "line": 115,
                          "column": 40
                        }
                      },
                      "value": true,
                      "raw": "true"
                    }
                  }
                ],
                "children": [
                  {
                    "start": 2845,
                    "end": 2852,
                    "type": "MustacheTag",
                    "expression": {
                      "type": "Identifier",
                      "start": 2846,
                      "end": 2851,
                      "loc": {
                        "start": {
                          "line": 115,
                          "column": 44
                        },
                        "end": {
                          "line": 115,
                          "column": 49
                        }
                      },
                      "name": "label"
                    }
                  }
                ]
              },
              {
                "start": 2856,
                "end": 2861,
                "type": "Text",
                "raw": "\n    ",
                "data": "\n    "
              }
            ],
            "default": true,
            "default_value": "\n      \n<p class:bx--progress-label=\"{true}\">{label}</p>\n\n    \n"
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 1911,
            "end": 1919,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 2015,
            "end": 2027,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 2032,
            "end": 2045,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 2050,
            "end": 2063,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "keydown",
          {
            "start": 2068,
            "end": 2078,
            "type": "EventHandler",
            "name": "keydown",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "RadioButton": {
      "moduleName": "RadioButton",
      "props": [
        [
          "value",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the value of the radio button"
          }
        ],
        [
          "checked",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to check the radio button"
          }
        ],
        [
          "disabled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable the radio button"
          }
        ],
        [
          "labelPosition",
          {
            "kind": "let",
            "value": "\"right\"",
            "type": "\"right\" | \"left\"",
            "description": "Specify the label position"
          }
        ],
        [
          "labelText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the label text"
          }
        ],
        [
          "hideLabel",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to visually hide the label text"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the input element"
          }
        ],
        [
          "name",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify a name attribute for the checkbox input"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLInputElement",
            "description": "Obtain a reference to the input HTML element"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "change",
          {
            "start": 1814,
            "end": 1823,
            "type": "EventHandler",
            "name": "change",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "RadioButtonGroup": {
      "moduleName": "RadioButtonGroup",
      "props": [
        [
          "selected",
          {
            "kind": "let",
            "type": "string",
            "description": "Set the selected radio button value"
          }
        ],
        [
          "disabled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable the radio buttons"
          }
        ],
        [
          "labelPosition",
          {
            "kind": "let",
            "value": "\"right\"",
            "type": "\"right\" | \"left\"",
            "description": "Specify the label position"
          }
        ],
        [
          "orientation",
          {
            "kind": "let",
            "value": "\"horizontal\"",
            "type": "\"horizontal\" | \"vertical\"",
            "description": "Specify the orientation of the radio buttons"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the container div element"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 1244,
            "end": 1252,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 1255,
            "end": 1267,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 1270,
            "end": 1283,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 1286,
            "end": 1299,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": [
        [
          "change",
          {
            "detail": "$selectedValue"
          }
        ]
      ]
    },
    "RadioButtonSkeleton": {
      "moduleName": "RadioButtonSkeleton",
      "props": [],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 68,
            "end": 76,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 79,
            "end": 91,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 94,
            "end": 107,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 110,
            "end": 123,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "RadioTile": {
      "moduleName": "RadioTile",
      "props": [
        [
          "checked",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to check the tile"
          }
        ],
        [
          "light",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to enable the light variant"
          }
        ],
        [
          "value",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the value of the radio input"
          }
        ],
        [
          "tabindex",
          {
            "kind": "let",
            "value": "\"0\"",
            "type": "string",
            "description": "Specify the tabindex"
          }
        ],
        [
          "iconDescription",
          {
            "kind": "let",
            "value": "\"Tile checkmark\"",
            "type": "string",
            "description": "Specify the ARIA label for the radio tile checkmark icon"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the input element"
          }
        ],
        [
          "name",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify a name attribute for the input"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "change",
          {
            "start": 1295,
            "end": 1304,
            "type": "EventHandler",
            "name": "change",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "keydown",
          {
            "start": 1354,
            "end": 1364,
            "type": "EventHandler",
            "name": "keydown",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "click",
          {
            "start": 1678,
            "end": 1686,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 1689,
            "end": 1701,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 1704,
            "end": 1717,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 1720,
            "end": 1733,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "Row": {
      "moduleName": "Row",
      "props": [
        [
          "as",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to render a custom HTML element\nProps are destructured as `props` in the default slot (e.g. <Row let:props><section {...props}>...</section></Row>)"
          }
        ],
        [
          "condensed",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to use the condensed variant"
          }
        ],
        [
          "narrow",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to use the narrow variant"
          }
        ],
        [
          "noGutter",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to remove the gutter"
          }
        ],
        [
          "noGutterLeft",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to remove the left gutter"
          }
        ],
        [
          "noGutterRight",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to remove the right gutter"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [],
      "dispatched_events": []
    },
    "Search": {
      "moduleName": "Search",
      "props": [
        [
          "small",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": ""
          }
        ],
        [
          "size",
          {
            "kind": "let",
            "value": "\"xl\"",
            "type": "\"sm\" | \"lg\" | \"xl\"",
            "description": "Specify the size of the search input"
          }
        ],
        [
          "skeleton",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to display the skeleton state"
          }
        ],
        [
          "light",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to enable the light variant"
          }
        ],
        [
          "disabled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable the search input"
          }
        ],
        [
          "value",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the value of the search input"
          }
        ],
        [
          "type",
          {
            "kind": "let",
            "value": "\"text\"",
            "type": "string",
            "description": "Specify the `type` attribute of the search input"
          }
        ],
        [
          "placeholder",
          {
            "kind": "let",
            "value": "\"Search...\"",
            "type": "string",
            "description": "Specify the `placeholder` attribute of the search input"
          }
        ],
        [
          "autocomplete",
          {
            "kind": "let",
            "value": "\"off\"",
            "type": "\"on\" | \"off\"",
            "description": "Specify the `autocomplete` attribute"
          }
        ],
        [
          "autofocus",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to auto focus the search element"
          }
        ],
        [
          "closeButtonLabelText",
          {
            "kind": "let",
            "value": "\"Clear search input\"",
            "type": "string",
            "description": "Specify the close button label text"
          }
        ],
        [
          "labelText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the label text"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the input element"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLInputElement",
            "description": "Obtain a reference to the input HTML element"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 3540,
            "end": 3548,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 2372,
            "end": 2384,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 2389,
            "end": 2402,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 2407,
            "end": 2420,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "change",
          {
            "start": 3204,
            "end": 3213,
            "type": "EventHandler",
            "name": "change",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "input",
          {
            "start": 3220,
            "end": 3228,
            "type": "EventHandler",
            "name": "input",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "focus",
          {
            "start": 3310,
            "end": 3318,
            "type": "EventHandler",
            "name": "focus",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "blur",
          {
            "start": 3325,
            "end": 3332,
            "type": "EventHandler",
            "name": "blur",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": [["clear", {}]]
    },
    "SearchSkeleton": {
      "moduleName": "SearchSkeleton",
      "props": [
        [
          "small",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": ""
          }
        ],
        [
          "size",
          {
            "kind": "let",
            "value": "\"xl\"",
            "type": "\"sm\" | \"lg\" | \"xl\"",
            "description": "Specify the size of the search input"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 521,
            "end": 529,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 532,
            "end": 544,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 547,
            "end": 560,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 563,
            "end": 576,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "Select": {
      "moduleName": "Select",
      "props": [
        [
          "selected",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify the selected item value"
          }
        ],
        [
          "size",
          {
            "kind": "let",
            "type": "\"sm\" | \"xl\"",
            "description": "Set the size of the select input"
          }
        ],
        [
          "inline",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to use the inline variant"
          }
        ],
        [
          "light",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to enable the light variant"
          }
        ],
        [
          "disabled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable the select element"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the select element"
          }
        ],
        [
          "name",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify a name attribute for the select element"
          }
        ],
        [
          "invalid",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to indicate an invalid state"
          }
        ],
        [
          "invalidText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the invalid state text"
          }
        ],
        [
          "helperText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the helper text"
          }
        ],
        [
          "noLabel",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to not render a label"
          }
        ],
        [
          "labelText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the label text"
          }
        ],
        [
          "hideLabel",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to visually hide the label text"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLSelectElement",
            "description": "Obtain a reference to the select HTML element"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "blur",
          {
            "start": 4645,
            "end": 4652,
            "type": "EventHandler",
            "name": "blur",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": [
        [
          "change",
          {
            "detail": "$selectedValue"
          }
        ]
      ]
    },
    "SelectItem": {
      "moduleName": "SelectItem",
      "props": [
        [
          "value",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the option value"
          }
        ],
        [
          "text",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the option text"
          }
        ],
        [
          "hidden",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to hide the option"
          }
        ],
        [
          "disabled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable the option"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [],
      "dispatched_events": []
    },
    "SelectItemGroup": {
      "moduleName": "SelectItemGroup",
      "props": [
        [
          "disabled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable the optgroup element"
          }
        ],
        [
          "label",
          {
            "kind": "let",
            "value": "\"Provide label\"",
            "type": "string",
            "description": "Specify the label attribute of the optgroup element"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [],
      "dispatched_events": []
    },
    "SelectSkeleton": {
      "moduleName": "SelectSkeleton",
      "props": [
        [
          "hideLabel",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to hide the label text"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 202,
            "end": 210,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 213,
            "end": 225,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 228,
            "end": 241,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 244,
            "end": 257,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "SelectableTile": {
      "moduleName": "SelectableTile",
      "props": [
        [
          "selected",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to select the tile"
          }
        ],
        [
          "light",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to enable the light variant"
          }
        ],
        [
          "title",
          {
            "kind": "let",
            "value": "\"title\"",
            "type": "string",
            "description": "Specify the title of the selectable tile"
          }
        ],
        [
          "value",
          {
            "kind": "let",
            "value": "\"value\"",
            "type": "string",
            "description": "Specify the value of the selectable tile"
          }
        ],
        [
          "tabindex",
          {
            "kind": "let",
            "value": "\"0\"",
            "type": "string",
            "description": "Specify the tabindex"
          }
        ],
        [
          "iconDescription",
          {
            "kind": "let",
            "value": "\"Tile checkmark\"",
            "type": "string",
            "description": "Specify the ARIA label for the selectable tile checkmark icon"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the input element"
          }
        ],
        [
          "name",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify a name attribute for the input"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLInputElement",
            "description": "Obtain a reference to the input HTML element"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 1792,
            "end": 1800,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 1871,
            "end": 1883,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 1886,
            "end": 1899,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 1902,
            "end": 1915,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "keydown",
          {
            "start": 1918,
            "end": 1928,
            "type": "EventHandler",
            "name": "keydown",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "SideNav": {
      "moduleName": "SideNav",
      "props": [
        [
          "fixed",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to use the fixed variant"
          }
        ],
        [
          "ariaLabel",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify the ARIA label for the nav"
          }
        ],
        [
          "isOpen",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to toggle the expanded state"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [],
      "dispatched_events": []
    },
    "SideNavItems": {
      "moduleName": "SideNavItems",
      "props": [],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [],
      "dispatched_events": []
    },
    "SideNavLink": {
      "moduleName": "SideNavLink",
      "props": [
        [
          "isSelected",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to select the current link"
          }
        ],
        [
          "href",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify the `href` attribute"
          }
        ],
        [
          "text",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify the text"
          }
        ],
        [
          "icon",
          {
            "kind": "let",
            "type": "{ render: typeof import(\"carbon-icons-svelte/lib/Add16\").default; skeleton: boolean; }",
            "description": "Specify the icon props"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLAnchorElement",
            "description": "Obtain a reference to the HTML anchor element"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 1037,
            "end": 1045,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "SideNavMenu": {
      "moduleName": "SideNavMenu",
      "props": [
        [
          "expanded",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to toggle the expanded state"
          }
        ],
        [
          "text",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify the text"
          }
        ],
        [
          "icon",
          {
            "kind": "let",
            "type": "{ render: typeof import(\"carbon-icons-svelte/lib/Add16\").default; skeleton: boolean; }",
            "description": "Specify the icon props"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLButtonElement",
            "description": "Obtain a reference to the HTML button element"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 886,
            "end": 894,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "SideNavMenuItem": {
      "moduleName": "SideNavMenuItem",
      "props": [
        [
          "isSelected",
          {
            "kind": "let",
            "type": "boolean",
            "description": "Set to `true` to select the item"
          }
        ],
        [
          "href",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify the `href` attribute"
          }
        ],
        [
          "text",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify the item text"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLAnchorElement",
            "description": "Obtain a reference to the HTML anchor element"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 687,
            "end": 695,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "SkeletonPlaceholder": {
      "moduleName": "SkeletonPlaceholder",
      "props": [],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 69,
            "end": 77,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 80,
            "end": 92,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 95,
            "end": 108,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 111,
            "end": 124,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "SkeletonText": {
      "moduleName": "SkeletonText",
      "props": [
        [
          "lines",
          {
            "kind": "let",
            "value": "3",
            "type": "number",
            "description": "Specify the number of lines to render"
          }
        ],
        [
          "heading",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to use the heading size variant"
          }
        ],
        [
          "paragraph",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to use the paragraph size variant"
          }
        ],
        [
          "width",
          {
            "kind": "let",
            "value": "\"100%\"",
            "type": "string",
            "description": "Specify the width of the text (% or px)"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 1497,
            "end": 1505,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 1510,
            "end": 1522,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 1527,
            "end": 1540,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 1545,
            "end": 1558,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "SkipToContent": {
      "moduleName": "SkipToContent",
      "props": [
        [
          "href",
          {
            "kind": "let",
            "value": "\"#main-content\"",
            "type": "string",
            "description": "Specify the `href` attribute"
          }
        ],
        [
          "tabindex",
          {
            "kind": "let",
            "value": "\"0\"",
            "type": "string",
            "description": "Specify the tabindex"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [
              {
                "start": 369,
                "end": 389,
                "type": "Text",
                "raw": "Skip to main content",
                "data": "Skip to main content"
              }
            ],
            "default": true,
            "default_value": "Skip to main content\n"
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 350,
            "end": 358,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "Slider": {
      "moduleName": "Slider",
      "props": [
        [
          "value",
          {
            "kind": "let",
            "value": "0",
            "type": "number",
            "description": "Specify the value of the slider"
          }
        ],
        [
          "max",
          {
            "kind": "let",
            "value": "100",
            "type": "number",
            "description": "Set the maximum slider value"
          }
        ],
        [
          "maxLabel",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the label for the max value"
          }
        ],
        [
          "min",
          {
            "kind": "let",
            "value": "0",
            "type": "number",
            "description": "Set the minimum slider value"
          }
        ],
        [
          "minLabel",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the label for the min value"
          }
        ],
        [
          "step",
          {
            "kind": "let",
            "value": "1",
            "type": "number",
            "description": "Set the step value"
          }
        ],
        [
          "stepMultiplier",
          {
            "kind": "let",
            "value": "4",
            "type": "number",
            "description": "Set the step multiplier value"
          }
        ],
        [
          "required",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to require a value"
          }
        ],
        [
          "inputType",
          {
            "kind": "let",
            "value": "\"number\"",
            "type": "string",
            "description": "Specify the input type"
          }
        ],
        [
          "disabled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable the slider"
          }
        ],
        [
          "light",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to enable the light variant"
          }
        ],
        [
          "hideTextInput",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to hide the text input"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the slider div element"
          }
        ],
        [
          "invalid",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to indicate an invalid state"
          }
        ],
        [
          "labelText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the label text"
          }
        ],
        [
          "name",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Set a name for the slider element"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLElement",
            "description": "Obtain a reference to the HTML element"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 3377,
            "end": 3385,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 3388,
            "end": 3400,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 3403,
            "end": 3416,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 3419,
            "end": 3432,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": [
        [
          "change",
          {
            "detail": "value"
          }
        ]
      ]
    },
    "SliderSkeleton": {
      "moduleName": "SliderSkeleton",
      "props": [
        [
          "hideLabel",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to hide the label text"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 202,
            "end": 210,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 213,
            "end": 225,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 228,
            "end": 241,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 244,
            "end": 257,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "StructuredList": {
      "moduleName": "StructuredList",
      "props": [
        [
          "selected",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify the selected structured list row value"
          }
        ],
        [
          "border",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to use the bordered variant"
          }
        ],
        [
          "selection",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to use the selection variant"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 1008,
            "end": 1016,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 1019,
            "end": 1031,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 1034,
            "end": 1047,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 1050,
            "end": 1063,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": [
        [
          "change",
          {
            "detail": "$selectedValue"
          }
        ]
      ]
    },
    "StructuredListBody": {
      "moduleName": "StructuredListBody",
      "props": [],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 69,
            "end": 77,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 80,
            "end": 92,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 95,
            "end": 108,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 111,
            "end": 124,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "StructuredListCell": {
      "moduleName": "StructuredListCell",
      "props": [
        [
          "head",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to use as a header"
          }
        ],
        [
          "noWrap",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to prevent wrapping"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 410,
            "end": 418,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 421,
            "end": 433,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 436,
            "end": 449,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 452,
            "end": 465,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "StructuredListHead": {
      "moduleName": "StructuredListHead",
      "props": [],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 69,
            "end": 77,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 80,
            "end": 92,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 95,
            "end": 108,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 111,
            "end": 124,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "StructuredListInput": {
      "moduleName": "StructuredListInput",
      "props": [
        [
          "checked",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to check the input"
          }
        ],
        [
          "title",
          {
            "kind": "let",
            "value": "\"title\"",
            "type": "string",
            "description": "Specify the title of the input"
          }
        ],
        [
          "value",
          {
            "kind": "let",
            "value": "\"value\"",
            "type": "string",
            "description": "Specify the value of the input"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the input element"
          }
        ],
        [
          "name",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify a name attribute for the input"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLInputElement",
            "description": "Obtain a reference to the input HTML element"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [],
      "dispatched_events": []
    },
    "StructuredListRow": {
      "moduleName": "StructuredListRow",
      "props": [
        [
          "head",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to use as a header"
          }
        ],
        [
          "label",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to render a label slot"
          }
        ],
        [
          "tabindex",
          {
            "kind": "let",
            "value": "\"0\"",
            "type": "string",
            "description": "Specify the tabindex"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 848,
            "end": 856,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 861,
            "end": 873,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 878,
            "end": 891,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 896,
            "end": 909,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "keydown",
          {
            "start": 671,
            "end": 681,
            "type": "EventHandler",
            "name": "keydown",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "StructuredListSkeleton": {
      "moduleName": "StructuredListSkeleton",
      "props": [
        [
          "rows",
          {
            "kind": "let",
            "value": "5",
            "type": "number",
            "description": "Specify the number of rows"
          }
        ],
        [
          "border",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to use the bordered variant"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 381,
            "end": 389,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 392,
            "end": 404,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 407,
            "end": 420,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 423,
            "end": 436,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "Switch": {
      "moduleName": "Switch",
      "props": [
        [
          "text",
          {
            "kind": "let",
            "value": "\"Provide text\"",
            "type": "string",
            "description": "Specify the switch text\nAlternatively, use the named slot \"text\" (e.g. <span slot=\"text\">...</span>)"
          }
        ],
        [
          "selected",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` for the switch to be selected"
          }
        ],
        [
          "disabled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable the switch"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the button element"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLButtonElement",
            "description": "Obtain a reference to the button HTML element"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [
              {
                "start": 1705,
                "end": 1711,
                "type": "MustacheTag",
                "expression": {
                  "type": "Identifier",
                  "start": 1706,
                  "end": 1710,
                  "loc": {
                    "start": {
                      "line": 81,
                      "column": 11
                    },
                    "end": {
                      "line": 81,
                      "column": 15
                    }
                  },
                  "name": "text"
                }
              }
            ],
            "default": true,
            "default_value": "{text}\n"
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 1355,
            "end": 1363,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 1428,
            "end": 1440,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 1443,
            "end": 1456,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 1459,
            "end": 1472,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "keydown",
          {
            "start": 1475,
            "end": 1485,
            "type": "EventHandler",
            "name": "keydown",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "Tab": {
      "moduleName": "Tab",
      "props": [
        [
          "label",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the tab label\nAlternatively, use the default slot (e.g. <Tab><span>Label</span></Tab>)"
          }
        ],
        [
          "href",
          {
            "kind": "let",
            "value": "\"#\"",
            "type": "string",
            "description": "Specify the href attribute"
          }
        ],
        [
          "disabled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable the tab"
          }
        ],
        [
          "tabindex",
          {
            "kind": "let",
            "value": "\"0\"",
            "type": "string",
            "description": "Specify the tabindex"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the top-level element"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLAnchorElement",
            "description": "Obtain a reference to the anchor HTML element"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [
              {
                "start": 1837,
                "end": 1844,
                "type": "MustacheTag",
                "expression": {
                  "type": "Identifier",
                  "start": 1838,
                  "end": 1843,
                  "loc": {
                    "start": {
                      "line": 88,
                      "column": 11
                    },
                    "end": {
                      "line": 88,
                      "column": 16
                    }
                  },
                  "name": "label"
                }
              }
            ],
            "default": true,
            "default_value": "{label}\n"
          }
        ]
      ],
      "forwarded_events": [
        [
          "mouseover",
          {
            "start": 1303,
            "end": 1315,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 1318,
            "end": 1331,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 1334,
            "end": 1347,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "TabContent": {
      "moduleName": "TabContent",
      "props": [
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the top-level element"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [],
      "dispatched_events": []
    },
    "Table": {
      "moduleName": "Table",
      "props": [
        [
          "size",
          {
            "kind": "let",
            "type": "\"compact\" | \"short\" | \"tall\"",
            "description": "Set the size of the table"
          }
        ],
        [
          "zebra",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to use zebra styles"
          }
        ],
        [
          "useStaticWidth",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to use static width"
          }
        ],
        [
          "shouldShowBorder",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` for the bordered variant"
          }
        ],
        [
          "sortable",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` for the sortable variant"
          }
        ],
        [
          "stickyHeader",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to enable a sticky header"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [],
      "dispatched_events": []
    },
    "TableBody": {
      "moduleName": "TableBody",
      "props": [],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [],
      "dispatched_events": []
    },
    "TableCell": {
      "moduleName": "TableCell",
      "props": [],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 21,
            "end": 29,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 30,
            "end": 42,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 43,
            "end": 56,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 57,
            "end": 70,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "TableContainer": {
      "moduleName": "TableContainer",
      "props": [
        [
          "title",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the title of the data table"
          }
        ],
        [
          "description",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the description of the data table"
          }
        ],
        [
          "stickyHeader",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to enable a sticky header"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [],
      "dispatched_events": []
    },
    "TableHead": {
      "moduleName": "TableHead",
      "props": [],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 24,
            "end": 32,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 33,
            "end": 45,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 46,
            "end": 59,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 60,
            "end": 73,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "TableHeader": {
      "moduleName": "TableHeader",
      "props": [
        [
          "scope",
          {
            "kind": "let",
            "value": "\"col\"",
            "type": "string",
            "description": "Specify the `scope` attribute"
          }
        ],
        [
          "translateWithId",
          {
            "kind": "let",
            "type": "() => string",
            "description": "Override the default id translations"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the top-level element"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "mouseover",
          {
            "start": 1561,
            "end": 1573,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 1578,
            "end": 1591,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 1596,
            "end": 1609,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "click",
          {
            "start": 1548,
            "end": 1556,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "TableRow": {
      "moduleName": "TableRow",
      "props": [],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 21,
            "end": 29,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 30,
            "end": 42,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 43,
            "end": 56,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 57,
            "end": 70,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "Tabs": {
      "moduleName": "Tabs",
      "props": [
        [
          "selected",
          {
            "kind": "let",
            "value": "0",
            "type": "number",
            "description": "Specify the selected tab index"
          }
        ],
        [
          "type",
          {
            "kind": "let",
            "value": "\"default\"",
            "type": "\"default\" | \"container\"",
            "description": "Specify the type of tabs"
          }
        ],
        [
          "iconDescription",
          {
            "kind": "let",
            "value": "\"Show menu options\"",
            "type": "string",
            "description": "Specify the ARIA label for the chevron icon"
          }
        ],
        [
          "triggerHref",
          {
            "kind": "let",
            "value": "\"#\"",
            "type": "string",
            "description": "Specify the tab trigger href attribute"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ],
        [
          "content",
          {
            "attributes": [
              {
                "start": 3450,
                "end": 3464,
                "type": "Attribute",
                "name": "name",
                "value": [
                  {
                    "start": 3456,
                    "end": 3463,
                    "type": "Text",
                    "raw": "content",
                    "data": "content"
                  }
                ]
              }
            ],
            "children": [],
            "default": false,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "keypress",
          {
            "start": 2884,
            "end": 2895,
            "type": "EventHandler",
            "name": "keypress",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "click",
          {
            "start": 3077,
            "end": 3085,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": [
        [
          "change",
          {
            "detail": "currentIndex"
          }
        ]
      ]
    },
    "TabsSkeleton": {
      "moduleName": "TabsSkeleton",
      "props": [
        [
          "count",
          {
            "kind": "let",
            "value": "4",
            "type": "number",
            "description": "Specify the number of tabs to render"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 210,
            "end": 218,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 221,
            "end": 233,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 236,
            "end": 249,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 252,
            "end": 265,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "Tag": {
      "moduleName": "Tag",
      "props": [
        [
          "type",
          {
            "kind": "let",
            "type": "\"red\" | \"magenta\" | \"purple\" | \"blue\" | \"cyan\" | \"teal\" | \"green\" | \"gray\" | \"cool-gray\" | \"warm-gray\" | \"high-contrast\"",
            "description": "Specify the type of tag"
          }
        ],
        [
          "filter",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to use filterable variant"
          }
        ],
        [
          "disabled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable a filterable tag"
          }
        ],
        [
          "skeleton",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to display the skeleton state"
          }
        ],
        [
          "title",
          {
            "kind": "let",
            "value": "\"Clear filter\"",
            "type": "string",
            "description": "Set the title for the close button in a filterable tag"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the filterable tag"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 2011,
            "end": 2019,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 2026,
            "end": 2038,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 2045,
            "end": 2058,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 2065,
            "end": 2078,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "TagSkeleton": {
      "moduleName": "TagSkeleton",
      "props": [],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 82,
            "end": 90,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 93,
            "end": 105,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 108,
            "end": 121,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 124,
            "end": 137,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "TextArea": {
      "moduleName": "TextArea",
      "props": [
        [
          "value",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the textarea value"
          }
        ],
        [
          "placeholder",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the placeholder text"
          }
        ],
        [
          "cols",
          {
            "kind": "let",
            "value": "50",
            "type": "number",
            "description": "Specify the number of cols"
          }
        ],
        [
          "rows",
          {
            "kind": "let",
            "value": "4",
            "type": "number",
            "description": "Specify the number of rows"
          }
        ],
        [
          "light",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to enable the light variant"
          }
        ],
        [
          "disabled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable the input"
          }
        ],
        [
          "helperText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the helper text"
          }
        ],
        [
          "labelText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the label text"
          }
        ],
        [
          "hideLabel",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to visually hide the label text"
          }
        ],
        [
          "invalid",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to indicate an invalid state"
          }
        ],
        [
          "invalidText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the text for the invalid state"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the textarea element"
          }
        ],
        [
          "name",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify a name attribute for the input"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLTextAreaElement",
            "description": "Obtain a reference to the textarea HTML element"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 1779,
            "end": 1787,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 1790,
            "end": 1802,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 1805,
            "end": 1818,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 1821,
            "end": 1834,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "change",
          {
            "start": 2733,
            "end": 2742,
            "type": "EventHandler",
            "name": "change",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "input",
          {
            "start": 2749,
            "end": 2757,
            "type": "EventHandler",
            "name": "input",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "focus",
          {
            "start": 2839,
            "end": 2847,
            "type": "EventHandler",
            "name": "focus",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "blur",
          {
            "start": 2854,
            "end": 2861,
            "type": "EventHandler",
            "name": "blur",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "TextAreaSkeleton": {
      "moduleName": "TextAreaSkeleton",
      "props": [
        [
          "hideLabel",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to visually hide the label text"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 211,
            "end": 219,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 222,
            "end": 234,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 237,
            "end": 250,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 253,
            "end": 266,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "TextInput": {
      "moduleName": "TextInput",
      "props": [
        [
          "size",
          {
            "kind": "let",
            "type": "\"sm\" | \"xl\"",
            "description": "Set the size of the input"
          }
        ],
        [
          "value",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the input value"
          }
        ],
        [
          "type",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the input type"
          }
        ],
        [
          "placeholder",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the placeholder text"
          }
        ],
        [
          "light",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to enable the light variant"
          }
        ],
        [
          "disabled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable the input"
          }
        ],
        [
          "helperText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the helper text"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the input element"
          }
        ],
        [
          "name",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify a name attribute for the input"
          }
        ],
        [
          "labelText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the label text"
          }
        ],
        [
          "hideLabel",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to visually hide the label text"
          }
        ],
        [
          "invalid",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to indicate an invalid state"
          }
        ],
        [
          "invalidText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the invalid state text"
          }
        ],
        [
          "warn",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to indicate an warning state"
          }
        ],
        [
          "warnText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the warning state text"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLInputElement",
            "description": "Obtain a reference to the input HTML element"
          }
        ],
        [
          "required",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to mark the field as required"
          }
        ],
        [
          "inline",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to use inline version"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 2606,
            "end": 2614,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 2617,
            "end": 2629,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 2632,
            "end": 2645,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 2648,
            "end": 2661,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "change",
          {
            "start": 4942,
            "end": 4951,
            "type": "EventHandler",
            "name": "change",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "input",
          {
            "start": 4960,
            "end": 4968,
            "type": "EventHandler",
            "name": "input",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "keydown",
          {
            "start": 5058,
            "end": 5068,
            "type": "EventHandler",
            "name": "keydown",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "focus",
          {
            "start": 5077,
            "end": 5085,
            "type": "EventHandler",
            "name": "focus",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "blur",
          {
            "start": 5094,
            "end": 5101,
            "type": "EventHandler",
            "name": "blur",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "TextInputSkeleton": {
      "moduleName": "TextInputSkeleton",
      "props": [
        [
          "hideLabel",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to hide the label text"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 202,
            "end": 210,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 213,
            "end": 225,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 228,
            "end": 241,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 244,
            "end": 257,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "Tile": {
      "moduleName": "Tile",
      "props": [
        [
          "light",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to enable the light variant"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 228,
            "end": 236,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 239,
            "end": 251,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 254,
            "end": 267,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 270,
            "end": 283,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "TileGroup": {
      "moduleName": "TileGroup",
      "props": [
        [
          "selected",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify the selected tile value"
          }
        ],
        [
          "disabled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable the tile group"
          }
        ],
        [
          "legend",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the legend text"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [],
      "dispatched_events": [
        [
          "select",
          {
            "detail": "$selectedValue"
          }
        ]
      ]
    },
    "TimePicker": {
      "moduleName": "TimePicker",
      "props": [
        [
          "size",
          {
            "kind": "let",
            "type": "\"sm\" | \"xl\"",
            "description": "Specify the size of the input"
          }
        ],
        [
          "value",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the input value"
          }
        ],
        [
          "type",
          {
            "kind": "let",
            "value": "\"text\"",
            "type": "string",
            "description": "Specify the input type"
          }
        ],
        [
          "placeholder",
          {
            "kind": "let",
            "value": "\"hh=mm\"",
            "type": "string",
            "description": "Specify the input placeholder text"
          }
        ],
        [
          "pattern",
          {
            "kind": "let",
            "value": "\"(1[012]|[1-9]):[0-5][0-9](\\\\s)?\"",
            "type": "string",
            "description": "Specify the `pattern` attribute for the input element"
          }
        ],
        [
          "maxlength",
          {
            "kind": "let",
            "value": "5",
            "type": "number",
            "description": "Specify the `maxlength` input attribute"
          }
        ],
        [
          "light",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to enable the light variant"
          }
        ],
        [
          "disabled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable the input"
          }
        ],
        [
          "labelText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the label text"
          }
        ],
        [
          "hideLabel",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to visually hide the label text"
          }
        ],
        [
          "invalid",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to indicate an invalid state"
          }
        ],
        [
          "invalidText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the invalid state text"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the input element"
          }
        ],
        [
          "name",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify a name attribute for the input"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLInputElement",
            "description": "Obtain a reference to the input HTML element"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 1965,
            "end": 1973,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 1976,
            "end": 1988,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 1991,
            "end": 2004,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 2007,
            "end": 2020,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "change",
          {
            "start": 3036,
            "end": 3045,
            "type": "EventHandler",
            "name": "change",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "input",
          {
            "start": 3054,
            "end": 3062,
            "type": "EventHandler",
            "name": "input",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "focus",
          {
            "start": 3152,
            "end": 3160,
            "type": "EventHandler",
            "name": "focus",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "blur",
          {
            "start": 3169,
            "end": 3176,
            "type": "EventHandler",
            "name": "blur",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "TimePickerSelect": {
      "moduleName": "TimePickerSelect",
      "props": [
        [
          "value",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the select value"
          }
        ],
        [
          "disabled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable the select"
          }
        ],
        [
          "iconDescription",
          {
            "kind": "let",
            "value": "\"Open list of options\"",
            "type": "string",
            "description": "Specify the ARIA label for the chevron icon"
          }
        ],
        [
          "labelText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the label text"
          }
        ],
        [
          "hideLabel",
          {
            "kind": "let",
            "value": "true",
            "type": "boolean",
            "description": ""
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the select element"
          }
        ],
        [
          "name",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify a name attribute for the select element"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLSelectElement",
            "description": "Obtain a reference to the select HTML element"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 1599,
            "end": 1607,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 1610,
            "end": 1622,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 1625,
            "end": 1638,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 1641,
            "end": 1654,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "ToastNotification": {
      "moduleName": "ToastNotification",
      "props": [
        [
          "notificationType",
          {
            "kind": "let",
            "value": "\"toast\"",
            "type": "\"toast\" | \"inline\"",
            "description": "Set the type of notification"
          }
        ],
        [
          "kind",
          {
            "kind": "let",
            "value": "\"error\"",
            "type": "\"error\" | \"info\" | \"info-square\" | \"success\" | \"warning\" | \"warning-alt\"",
            "description": "Specify the kind of notification"
          }
        ],
        [
          "lowContrast",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to use the low contrast variant"
          }
        ],
        [
          "timeout",
          {
            "kind": "let",
            "value": "0",
            "type": "number",
            "description": "Set the timeout duration (ms) to hide the notification after opening it"
          }
        ],
        [
          "role",
          {
            "kind": "let",
            "value": "\"alert\"",
            "type": "string",
            "description": "Set the `role` attribute"
          }
        ],
        [
          "title",
          {
            "kind": "let",
            "value": "\"Title\"",
            "type": "string",
            "description": "Specify the title text"
          }
        ],
        [
          "subtitle",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the subtitle text"
          }
        ],
        [
          "caption",
          {
            "kind": "let",
            "value": "\"Caption\"",
            "type": "string",
            "description": "Specify the caption text"
          }
        ],
        [
          "iconDescription",
          {
            "kind": "let",
            "value": "\"Closes notification\"",
            "type": "string",
            "description": "Specify the ARIA label for the icon"
          }
        ],
        [
          "hideCloseButton",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to hide the close button"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 2200,
            "end": 2208,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 2213,
            "end": 2225,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 2230,
            "end": 2243,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 2248,
            "end": 2261,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": [["close", {}]]
    },
    "Toggle": {
      "moduleName": "Toggle",
      "props": [
        [
          "toggled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to toggle the checkbox input"
          }
        ],
        [
          "disabled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable checkbox input"
          }
        ],
        [
          "labelA",
          {
            "kind": "let",
            "value": "\"Off\"",
            "type": "string",
            "description": "Specify the label for the untoggled state"
          }
        ],
        [
          "labelB",
          {
            "kind": "let",
            "value": "\"On\"",
            "type": "string",
            "description": "Specify the label for the toggled state"
          }
        ],
        [
          "labelText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the label text"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the input element"
          }
        ],
        [
          "name",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify a name attribute for the checkbox input"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 934,
            "end": 942,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 945,
            "end": 957,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 960,
            "end": 973,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 976,
            "end": 989,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "change",
          {
            "start": 1085,
            "end": 1094,
            "type": "EventHandler",
            "name": "change",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "keyup",
          {
            "start": 1157,
            "end": 1165,
            "type": "EventHandler",
            "name": "keyup",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "focus",
          {
            "start": 1314,
            "end": 1322,
            "type": "EventHandler",
            "name": "focus",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "blur",
          {
            "start": 1327,
            "end": 1334,
            "type": "EventHandler",
            "name": "blur",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "ToggleSkeleton": {
      "moduleName": "ToggleSkeleton",
      "props": [
        [
          "labelText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the label text"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the input element"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 311,
            "end": 319,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 322,
            "end": 334,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 337,
            "end": 350,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 353,
            "end": 366,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "ToggleSmall": {
      "moduleName": "ToggleSmall",
      "props": [
        [
          "toggled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to toggle the checkbox input"
          }
        ],
        [
          "disabled",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to disable checkbox input"
          }
        ],
        [
          "labelA",
          {
            "kind": "let",
            "value": "\"Off\"",
            "type": "string",
            "description": "Specify the label for the untoggled state"
          }
        ],
        [
          "labelB",
          {
            "kind": "let",
            "value": "\"On\"",
            "type": "string",
            "description": "Specify the label for the toggled state"
          }
        ],
        [
          "labelText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the label text"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the input element"
          }
        ],
        [
          "name",
          {
            "kind": "let",
            "type": "string",
            "description": "Specify a name attribute for the checkbox input"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 934,
            "end": 942,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 945,
            "end": 957,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 960,
            "end": 973,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 976,
            "end": 989,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "change",
          {
            "start": 1186,
            "end": 1195,
            "type": "EventHandler",
            "name": "change",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "keyup",
          {
            "start": 1258,
            "end": 1266,
            "type": "EventHandler",
            "name": "keyup",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "focus",
          {
            "start": 1415,
            "end": 1423,
            "type": "EventHandler",
            "name": "focus",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "blur",
          {
            "start": 1428,
            "end": 1435,
            "type": "EventHandler",
            "name": "blur",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "ToggleSmallSkeleton": {
      "moduleName": "ToggleSmallSkeleton",
      "props": [
        [
          "labelText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the label text"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the input element"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "click",
          {
            "start": 311,
            "end": 319,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 322,
            "end": 334,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 337,
            "end": 350,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 353,
            "end": 366,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "Toolbar": {
      "moduleName": "Toolbar",
      "props": [
        [
          "size",
          {
            "kind": "let",
            "value": "\"default\"",
            "type": "\"sm\" | \"default\"",
            "description": "Specify the toolbar size"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [],
      "dispatched_events": []
    },
    "ToolbarBatchActions": {
      "moduleName": "ToolbarBatchActions",
      "props": [
        [
          "formatTotalSelected",
          {
            "kind": "let",
            "type": "(totalSelected: number) => string",
            "description": "Override the total items selected text"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [],
      "dispatched_events": []
    },
    "ToolbarContent": {
      "moduleName": "ToolbarContent",
      "props": [],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [],
      "dispatched_events": []
    },
    "ToolbarMenu": {
      "moduleName": "ToolbarMenu",
      "props": [],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [],
      "dispatched_events": []
    },
    "ToolbarMenuItem": {
      "moduleName": "ToolbarMenuItem",
      "props": [],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 109,
            "end": 117,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "keydown",
          {
            "start": 118,
            "end": 128,
            "type": "EventHandler",
            "name": "keydown",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "ToolbarSearch": {
      "moduleName": "ToolbarSearch",
      "props": [
        [
          "value",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the value of the search input"
          }
        ],
        [
          "expanded",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to expand the search bar"
          }
        ],
        [
          "persistent",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to keep the search bar expanded"
          }
        ],
        [
          "tabindex",
          {
            "kind": "let",
            "value": "\"0\"",
            "type": "string",
            "description": "Specify the tabindex"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLInputElement",
            "description": "Obtain a reference to the input HTML element"
          }
        ]
      ],
      "slots": [],
      "forwarded_events": [
        [
          "change",
          {
            "start": 1316,
            "end": 1325,
            "type": "EventHandler",
            "name": "change",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "input",
          {
            "start": 1330,
            "end": 1338,
            "type": "EventHandler",
            "name": "input",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "focus",
          {
            "start": 1343,
            "end": 1351,
            "type": "EventHandler",
            "name": "focus",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "blur",
          {
            "start": 1356,
            "end": 1363,
            "type": "EventHandler",
            "name": "blur",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "Tooltip": {
      "moduleName": "Tooltip",
      "props": [
        [
          "direction",
          {
            "kind": "let",
            "value": "\"bottom\"",
            "type": "\"top\" | \"right\" | \"bottom\" | \"left\"",
            "description": "Set the direction of the tooltip relative to the button"
          }
        ],
        [
          "open",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to open the tooltip"
          }
        ],
        [
          "hideIcon",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to hide the tooltip icon"
          }
        ],
        [
          "icon",
          {
            "kind": "let",
            "type": "typeof import(\"carbon-icons-svelte/lib/Add16\").default",
            "description": "Specify the icon from `carbon-icons-svelte` to render for the tooltip button\nIcon size must be 16px (e.g. `Add16`, `Task16`)"
          }
        ],
        [
          "iconDescription",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the ARIA label for the tooltip button"
          }
        ],
        [
          "iconName",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the icon name attribute"
          }
        ],
        [
          "tabindex",
          {
            "kind": "let",
            "value": "\"0\"",
            "type": "string",
            "description": "Set the button tabindex"
          }
        ],
        [
          "tooltipId",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the tooltip"
          }
        ],
        [
          "triggerId",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the tooltip button"
          }
        ],
        [
          "triggerText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Set the tooltip button text"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLElement",
            "description": "Obtain a reference to the trigger text HTML element"
          }
        ],
        [
          "refTooltip",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLElement",
            "description": "Obtain a reference to the tooltip HTML element"
          }
        ],
        [
          "refIcon",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLElement",
            "description": "Obtain a reference to the icon HTML element"
          }
        ]
      ],
      "slots": [
        [
          "triggerText",
          {
            "attributes": [
              {
                "start": 5648,
                "end": 5666,
                "type": "Attribute",
                "name": "name",
                "value": [
                  {
                    "start": 5654,
                    "end": 5665,
                    "type": "Text",
                    "raw": "triggerText",
                    "data": "triggerText"
                  }
                ]
              }
            ],
            "children": [
              {
                "start": 5667,
                "end": 5680,
                "type": "MustacheTag",
                "expression": {
                  "type": "Identifier",
                  "start": 5668,
                  "end": 5679,
                  "loc": {
                    "start": {
                      "line": 217,
                      "column": 32
                    },
                    "end": {
                      "line": 217,
                      "column": 43
                    }
                  },
                  "name": "triggerText"
                }
              }
            ],
            "default": false,
            "default_value": "{triggerText}\n"
          }
        ],
        [
          "icon",
          {
            "attributes": [
              {
                "start": 5305,
                "end": 5316,
                "type": "Attribute",
                "name": "name",
                "value": [
                  {
                    "start": 5311,
                    "end": 5315,
                    "type": "Text",
                    "raw": "icon",
                    "data": "icon"
                  }
                ]
              }
            ],
            "children": [
              {
                "start": 5317,
                "end": 5328,
                "type": "Text",
                "raw": "\n          ",
                "data": "\n          "
              },
              {
                "start": 5328,
                "end": 5380,
                "type": "InlineComponent",
                "name": "svelte:component",
                "attributes": [
                  {
                    "start": 5360,
                    "end": 5377,
                    "type": "Attribute",
                    "name": "name",
                    "value": [
                      {
                        "start": 5366,
                        "end": 5376,
                        "type": "MustacheTag",
                        "expression": {
                          "type": "Identifier",
                          "start": 5367,
                          "end": 5375,
                          "loc": {
                            "start": {
                              "line": 204,
                              "column": 49
                            },
                            "end": {
                              "line": 204,
                              "column": 57
                            }
                          },
                          "name": "iconName"
                        }
                      }
                    ]
                  }
                ],
                "children": [],
                "expression": {
                  "type": "Identifier",
                  "start": 5353,
                  "end": 5357,
                  "loc": {
                    "start": {
                      "line": 204,
                      "column": 35
                    },
                    "end": {
                      "line": 204,
                      "column": 39
                    }
                  },
                  "name": "icon"
                }
              },
              {
                "start": 5380,
                "end": 5389,
                "type": "Text",
                "raw": "\n        ",
                "data": "\n        "
              }
            ],
            "default": false,
            "default_value": "\n          \n<svelte:component this=\"{icon}\" name=\"{iconName}\" />\n\n        \n"
          }
        ],
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [],
      "dispatched_events": []
    },
    "TooltipDefinition": {
      "moduleName": "TooltipDefinition",
      "props": [
        [
          "tooltipText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the tooltip text"
          }
        ],
        [
          "align",
          {
            "kind": "let",
            "value": "\"center\"",
            "type": "\"start\" | \"center\" | \"end\"",
            "description": "Set the alignment of the tooltip relative to the icon"
          }
        ],
        [
          "direction",
          {
            "kind": "let",
            "value": "\"bottom\"",
            "type": "\"top\" | \"bottom\"",
            "description": "Set the direction of the tooltip relative to the icon"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the tooltip div element"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLButtonElement",
            "description": "Obtain a reference to the button HTML element"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ],
        [
          "tooltip",
          {
            "attributes": [
              {
                "start": 1681,
                "end": 1695,
                "type": "Attribute",
                "name": "name",
                "value": [
                  {
                    "start": 1687,
                    "end": 1694,
                    "type": "Text",
                    "raw": "tooltip",
                    "data": "tooltip"
                  }
                ]
              }
            ],
            "children": [
              {
                "start": 1696,
                "end": 1709,
                "type": "MustacheTag",
                "expression": {
                  "type": "Identifier",
                  "start": 1697,
                  "end": 1708,
                  "loc": {
                    "start": {
                      "line": 76,
                      "column": 26
                    },
                    "end": {
                      "line": 76,
                      "column": 37
                    }
                  },
                  "name": "tooltipText"
                }
              }
            ],
            "default": false,
            "default_value": "{tooltipText}\n"
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 1457,
            "end": 1465,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 1470,
            "end": 1482,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 1487,
            "end": 1500,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 1505,
            "end": 1518,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "focus",
          {
            "start": 1523,
            "end": 1531,
            "type": "EventHandler",
            "name": "focus",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "TooltipIcon": {
      "moduleName": "TooltipIcon",
      "props": [
        [
          "tooltipText",
          {
            "kind": "let",
            "value": "\"\"",
            "type": "string",
            "description": "Specify the tooltip text"
          }
        ],
        [
          "align",
          {
            "kind": "let",
            "value": "\"center\"",
            "type": "\"start\" | \"center\" | \"end\"",
            "description": "Set the alignment of the tooltip relative to the icon"
          }
        ],
        [
          "direction",
          {
            "kind": "let",
            "value": "\"bottom\"",
            "type": "\"top\" | \"right\" | \"bottom\" | \"left\"",
            "description": "Set the direction of the tooltip relative to the icon"
          }
        ],
        [
          "id",
          {
            "kind": "let",
            "type": "string",
            "description": "Set an id for the span element"
          }
        ],
        [
          "ref",
          {
            "kind": "let",
            "value": "null",
            "type": "null | HTMLButtonElement",
            "description": "Obtain a reference to the button HTML element"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 1173,
            "end": 1181,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 1184,
            "end": 1196,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 1199,
            "end": 1212,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 1267,
            "end": 1280,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "focus",
          {
            "start": 1283,
            "end": 1291,
            "type": "EventHandler",
            "name": "focus",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    },
    "UnorderedList": {
      "moduleName": "UnorderedList",
      "props": [
        [
          "nested",
          {
            "kind": "let",
            "value": "false",
            "type": "boolean",
            "description": "Set to `true` to use the nested variant"
          }
        ]
      ],
      "slots": [
        [
          "default",
          {
            "attributes": [],
            "children": [],
            "default": true,
            "default_value": ""
          }
        ]
      ],
      "forwarded_events": [
        [
          "click",
          {
            "start": 240,
            "end": 248,
            "type": "EventHandler",
            "name": "click",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseover",
          {
            "start": 251,
            "end": 263,
            "type": "EventHandler",
            "name": "mouseover",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseenter",
          {
            "start": 266,
            "end": 279,
            "type": "EventHandler",
            "name": "mouseenter",
            "modifiers": [],
            "expression": null
          }
        ],
        [
          "mouseleave",
          {
            "start": 282,
            "end": 295,
            "type": "EventHandler",
            "name": "mouseleave",
            "modifiers": [],
            "expression": null
          }
        ]
      ],
      "dispatched_events": []
    }
  }
}
